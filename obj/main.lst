                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.2.2 #13350 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _state_switcher
                                     13 	.globl _dungeon_logic_upd
                                     14 	.globl _update_dng_UI
                                     15 	.globl _init_dng_UI
                                     16 	.globl _collision_check
                                     17 	.globl _update_dng
                                     18 	.globl _init_dungeon
                                     19 	.globl _load_enemy
                                     20 	.globl _check_r_walls
                                     21 	.globl _check_l_walls
                                     22 	.globl _check_m_walls
                                     23 	.globl _return_value
                                     24 	.globl _rand
                                     25 	.globl _initrand
                                     26 	.globl _set_sprite_data
                                     27 	.globl _set_bkg_tiles
                                     28 	.globl _set_bkg_data
                                     29 	.globl _wait_vbl_done
                                     30 	.globl _joypad
                                     31 	.globl _test_dungeon
                                     32 	.globl _white_screen
                                     33 ;--------------------------------------------------------
                                     34 ; special function registers
                                     35 ;--------------------------------------------------------
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area _DATA
                                     40 ;--------------------------------------------------------
                                     41 ; ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area _INITIALIZED
                           000000    44 Fmain$global_state$0_0$0==.
      000000                         45 _global_state:
      000000                         46 	.ds 1
                           000001    47 Fmain$encounter_counter$0_0$0==.
      000001                         48 _encounter_counter:
      000001                         49 	.ds 1
                           000002    50 Fmain$encounter_timer$0_0$0==.
      000002                         51 _encounter_timer:
      000002                         52 	.ds 1
                           000003    53 Fmain$player_x$0_0$0==.
      000003                         54 _player_x:
      000003                         55 	.ds 1
                           000004    56 Fmain$player_y$0_0$0==.
      000004                         57 _player_y:
      000004                         58 	.ds 1
                           000005    59 Fmain$p_str$0_0$0==.
      000005                         60 _p_str:
      000005                         61 	.ds 1
                           000006    62 Fmain$p_int$0_0$0==.
      000006                         63 _p_int:
      000006                         64 	.ds 1
                           000007    65 Fmain$p_agi$0_0$0==.
      000007                         66 _p_agi:
      000007                         67 	.ds 1
                           000008    68 Fmain$p_con$0_0$0==.
      000008                         69 _p_con:
      000008                         70 	.ds 1
                           000009    71 Fmain$p_luk$0_0$0==.
      000009                         72 _p_luk:
      000009                         73 	.ds 1
                           00000A    74 Fmain$inventory$0_0$0==.
      00000A                         75 _inventory:
      00000A                         76 	.ds 100
                           00006E    77 Fmain$player_dir$0_0$0==.
      00006E                         78 _player_dir:
      00006E                         79 	.ds 1
                           00006F    80 Fmain$joypad_current$0_0$0==.
      00006F                         81 _joypad_current:
      00006F                         82 	.ds 1
                           000070    83 Fmain$joypad_previous$0_0$0==.
      000070                         84 _joypad_previous:
      000070                         85 	.ds 1
                                     86 ;--------------------------------------------------------
                                     87 ; absolute external ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area _DABS (ABS)
                                     90 ;--------------------------------------------------------
                                     91 ; global & static initialisations
                                     92 ;--------------------------------------------------------
                                     93 	.area _HOME
                                     94 	.area _GSINIT
                                     95 	.area _GSFINAL
                                     96 	.area _GSINIT
                                     97 ;--------------------------------------------------------
                                     98 ; Home
                                     99 ;--------------------------------------------------------
                                    100 	.area _HOME
                                    101 	.area _HOME
                                    102 ;--------------------------------------------------------
                                    103 ; code
                                    104 ;--------------------------------------------------------
                                    105 	.area _CODE
                           000000   106 	G$init_dungeon$0$0	= .
                                    107 	.globl	G$init_dungeon$0$0
                           000000   108 	C$main.c$71$0_0$114	= .
                                    109 	.globl	C$main.c$71$0_0$114
                                    110 ;src/main.c:71: void init_dungeon(const unsigned char *dng,uint8_t dng_width, uint8_t dng_height) {
                                    111 ;	---------------------------------
                                    112 ; Function init_dungeon
                                    113 ; ---------------------------------
      000000                        114 _init_dungeon::
      000000 E8 FB            [16]  115 	add	sp, #-5
      000002 F8 03            [12]  116 	ldhl	sp,	#3
      000004 73               [ 8]  117 	ld	(hl), e
      000005 23               [ 8]  118 	inc	hl
      000006 72               [ 8]  119 	ld	(hl), d
      000007 2B               [ 8]  120 	dec	hl
      000008 2B               [ 8]  121 	dec	hl
      000009 77               [ 8]  122 	ld	(hl), a
                           00000A   123 	C$main.c$73$1_0$114	= .
                                    124 	.globl	C$main.c$73$1_0$114
                                    125 ;src/main.c:73: initrand(sys_time);
      00000A 21r00r00         [12]  126 	ld	hl, #_sys_time
      00000D 2A               [ 8]  127 	ld	a, (hl+)
      00000E 5F               [ 4]  128 	ld	e, a
      00000F 56               [ 8]  129 	ld	d, (hl)
      000010 D5               [16]  130 	push	de
      000011 CDr00r00         [24]  131 	call	_initrand
      000014 E1               [12]  132 	pop	hl
                           000015   133 	C$main.c$74$1_0$114	= .
                                    134 	.globl	C$main.c$74$1_0$114
                                    135 ;src/main.c:74: encounter_counter = rand() % 15 + 5;
      000015 CDr00r00         [24]  136 	call	_rand
      000018 16 00            [ 8]  137 	ld	d, #0x00
      00001A 01 0F 00         [12]  138 	ld	bc, #0x000f
      00001D CDr00r00         [24]  139 	call	__modsint
      000020 79               [ 4]  140 	ld	a, c
      000021 C6 05            [ 8]  141 	add	a, #0x05
      000023 EAr01r00         [16]  142 	ld	(#_encounter_counter),a
                           000026   143 	C$main.c$75$1_0$114	= .
                                    144 	.globl	C$main.c$75$1_0$114
                                    145 ;src/main.c:75: encounter_timer = 0;// increments with every move throught the dungeon. Then it equales to encounteer_counter battle starts
      000026 21r02r00         [12]  146 	ld	hl, #_encounter_timer
      000029 36 00            [12]  147 	ld	(hl), #0x00
                           00002B   148 	C$main.c$78$1_0$114	= .
                                    149 	.globl	C$main.c$78$1_0$114
                                    150 ;src/main.c:78: set_bkg_data(0,75,dng_tileset);
      00002B 11r00r00         [12]  151 	ld	de, #_dng_tileset
      00002E D5               [16]  152 	push	de
      00002F 21 00 4B         [12]  153 	ld	hl, #0x4b00
      000032 E5               [16]  154 	push	hl
      000033 CDr00r00         [24]  155 	call	_set_bkg_data
      000036 E8 04            [16]  156 	add	sp, #4
                           000038   157 	C$main.c$79$1_0$114	= .
                                    158 	.globl	C$main.c$79$1_0$114
                                    159 ;src/main.c:79: set_sprite_data(0,25,UI_tiles);
      000038 11r00r00         [12]  160 	ld	de, #_UI_tiles
      00003B D5               [16]  161 	push	de
      00003C 21 00 19         [12]  162 	ld	hl, #0x1900
      00003F E5               [16]  163 	push	hl
      000040 CDr00r00         [24]  164 	call	_set_sprite_data
      000043 E8 04            [16]  165 	add	sp, #4
                           000045   166 	C$main.c$82$1_0$114	= .
                                    167 	.globl	C$main.c$82$1_0$114
                                    168 ;src/main.c:82: for(uint8_t i = 0; i < dng_width; i++){
      000045 0E 00            [ 8]  169 	ld	c, #0x00
      000047                        170 00109$:
      000047 79               [ 4]  171 	ld	a, c
      000048 F8 02            [12]  172 	ldhl	sp,	#2
      00004A 96               [ 8]  173 	sub	a, (hl)
      00004B 30 36            [12]  174 	jr	NC, 00104$
                           00004D   175 	C$main.c$83$1_0$114	= .
                                    176 	.globl	C$main.c$83$1_0$114
                                    177 ;src/main.c:83: for(uint8_t j = 0; j < dng_height; j++){
      00004D C5               [16]  178 	push	bc
      00004E 5E               [ 8]  179 	ld	e, (hl)
      00004F 79               [ 4]  180 	ld	a, c
      000050 CDr00r00         [24]  181 	call	__muluchar
      000053 F8 02            [12]  182 	ldhl	sp,	#2
      000055 79               [ 4]  183 	ld	a, c
      000056 22               [ 8]  184 	ld	(hl+), a
      000057 70               [ 8]  185 	ld	(hl), b
      000058 C1               [12]  186 	pop	bc
      000059 06 00            [ 8]  187 	ld	b, #0x00
      00005B                        188 00106$:
      00005B 78               [ 4]  189 	ld	a, b
      00005C F8 07            [12]  190 	ldhl	sp,	#7
      00005E 96               [ 8]  191 	sub	a, (hl)
      00005F 30 1F            [12]  192 	jr	NC, 00110$
                           000061   193 	C$main.c$84$5_0$118	= .
                                    194 	.globl	C$main.c$84$5_0$118
                                    195 ;src/main.c:84: if(dng[i*dng_width+j]==0x01){
      000061 58               [ 4]  196 	ld	e, b
      000062 16 00            [ 8]  197 	ld	d, #0x00
      000064 E1               [12]  198 	pop	hl
      000065 E5               [16]  199 	push	hl
      000066 19               [ 8]  200 	add	hl, de
      000067 5D               [ 4]  201 	ld	e, l
      000068 54               [ 4]  202 	ld	d, h
      000069 F8 03            [12]  203 	ldhl	sp,	#3
      00006B 2A               [ 8]  204 	ld	a,	(hl+)
      00006C 66               [ 8]  205 	ld	h, (hl)
      00006D 6F               [ 4]  206 	ld	l, a
      00006E 19               [ 8]  207 	add	hl, de
      00006F 5D               [ 4]  208 	ld	e, l
      000070 54               [ 4]  209 	ld	d, h
      000071 1A               [ 8]  210 	ld	a, (de)
      000072 3D               [ 4]  211 	dec	a
      000073 20 08            [12]  212 	jr	NZ, 00107$
                           000075   213 	C$main.c$85$6_0$119	= .
                                    214 	.globl	C$main.c$85$6_0$119
                                    215 ;src/main.c:85: player_x = j;
      000075 21r03r00         [12]  216 	ld	hl, #_player_x
      000078 70               [ 8]  217 	ld	(hl), b
                           000079   218 	C$main.c$86$6_0$119	= .
                                    219 	.globl	C$main.c$86$6_0$119
                                    220 ;src/main.c:86: player_y = i;
      000079 21r04r00         [12]  221 	ld	hl, #_player_y
      00007C 71               [ 8]  222 	ld	(hl), c
      00007D                        223 00107$:
                           00007D   224 	C$main.c$83$4_0$117	= .
                                    225 	.globl	C$main.c$83$4_0$117
                                    226 ;src/main.c:83: for(uint8_t j = 0; j < dng_height; j++){
      00007D 04               [ 4]  227 	inc	b
      00007E 18 DB            [12]  228 	jr	00106$
      000080                        229 00110$:
                           000080   230 	C$main.c$82$2_0$115	= .
                                    231 	.globl	C$main.c$82$2_0$115
                                    232 ;src/main.c:82: for(uint8_t i = 0; i < dng_width; i++){
      000080 0C               [ 4]  233 	inc	c
      000081 18 C4            [12]  234 	jr	00109$
      000083                        235 00104$:
                           000083   236 	C$main.c$90$1_0$114	= .
                                    237 	.globl	C$main.c$90$1_0$114
                                    238 ;src/main.c:90: SHOW_BKG;
      000083 F0r00            [12]  239 	ldh	a, (_LCDC_REG + 0)
      000085 F6 01            [ 8]  240 	or	a, #0x01
      000087 E0r00            [12]  241 	ldh	(_LCDC_REG + 0), a
                           000089   242 	C$main.c$92$1_0$114	= .
                                    243 	.globl	C$main.c$92$1_0$114
                                    244 ;src/main.c:92: }
      000089 E8 05            [16]  245 	add	sp, #5
      00008B E1               [12]  246 	pop	hl
      00008C 33               [ 8]  247 	inc	sp
      00008D E9               [ 4]  248 	jp	(hl)
                           00008E   249 G$white_screen$0_0$0 == .
      00008E                        250 _white_screen:
      00008E 4A                     251 	.db #0x4a	; 74	'J'
      00008F 4A                     252 	.db #0x4a	; 74	'J'
      000090 4A                     253 	.db #0x4a	; 74	'J'
      000091 4A                     254 	.db #0x4a	; 74	'J'
      000092 4A                     255 	.db #0x4a	; 74	'J'
      000093 4A                     256 	.db #0x4a	; 74	'J'
      000094 4A                     257 	.db #0x4a	; 74	'J'
      000095 4A                     258 	.db #0x4a	; 74	'J'
      000096 4A                     259 	.db #0x4a	; 74	'J'
      000097 4A                     260 	.db #0x4a	; 74	'J'
      000098 4A                     261 	.db #0x4a	; 74	'J'
      000099 4A                     262 	.db #0x4a	; 74	'J'
      00009A 4A                     263 	.db #0x4a	; 74	'J'
      00009B 4A                     264 	.db #0x4a	; 74	'J'
      00009C 4A                     265 	.db #0x4a	; 74	'J'
      00009D 4A                     266 	.db #0x4a	; 74	'J'
      00009E 4A                     267 	.db #0x4a	; 74	'J'
      00009F 4A                     268 	.db #0x4a	; 74	'J'
      0000A0 4A                     269 	.db #0x4a	; 74	'J'
      0000A1 4A                     270 	.db #0x4a	; 74	'J'
      0000A2 4A                     271 	.db #0x4a	; 74	'J'
      0000A3 4A                     272 	.db #0x4a	; 74	'J'
      0000A4 4A                     273 	.db #0x4a	; 74	'J'
      0000A5 4A                     274 	.db #0x4a	; 74	'J'
      0000A6 4A                     275 	.db #0x4a	; 74	'J'
      0000A7 4A                     276 	.db #0x4a	; 74	'J'
      0000A8 4A                     277 	.db #0x4a	; 74	'J'
      0000A9 4A                     278 	.db #0x4a	; 74	'J'
      0000AA 4A                     279 	.db #0x4a	; 74	'J'
      0000AB 4A                     280 	.db #0x4a	; 74	'J'
      0000AC 4A                     281 	.db #0x4a	; 74	'J'
      0000AD 4A                     282 	.db #0x4a	; 74	'J'
      0000AE 4A                     283 	.db #0x4a	; 74	'J'
      0000AF 4A                     284 	.db #0x4a	; 74	'J'
      0000B0 4A                     285 	.db #0x4a	; 74	'J'
      0000B1 4A                     286 	.db #0x4a	; 74	'J'
      0000B2 4A                     287 	.db #0x4a	; 74	'J'
      0000B3 4A                     288 	.db #0x4a	; 74	'J'
      0000B4 4A                     289 	.db #0x4a	; 74	'J'
      0000B5 4A                     290 	.db #0x4a	; 74	'J'
      0000B6 4A                     291 	.db #0x4a	; 74	'J'
      0000B7 4A                     292 	.db #0x4a	; 74	'J'
      0000B8 4A                     293 	.db #0x4a	; 74	'J'
      0000B9 4A                     294 	.db #0x4a	; 74	'J'
      0000BA 4A                     295 	.db #0x4a	; 74	'J'
      0000BB 4A                     296 	.db #0x4a	; 74	'J'
      0000BC 4A                     297 	.db #0x4a	; 74	'J'
      0000BD 4A                     298 	.db #0x4a	; 74	'J'
      0000BE 4A                     299 	.db #0x4a	; 74	'J'
      0000BF 4A                     300 	.db #0x4a	; 74	'J'
      0000C0 4A                     301 	.db #0x4a	; 74	'J'
      0000C1 4A                     302 	.db #0x4a	; 74	'J'
      0000C2 4A                     303 	.db #0x4a	; 74	'J'
      0000C3 4A                     304 	.db #0x4a	; 74	'J'
      0000C4 4A                     305 	.db #0x4a	; 74	'J'
      0000C5 4A                     306 	.db #0x4a	; 74	'J'
      0000C6 4A                     307 	.db #0x4a	; 74	'J'
      0000C7 4A                     308 	.db #0x4a	; 74	'J'
      0000C8 4A                     309 	.db #0x4a	; 74	'J'
      0000C9 4A                     310 	.db #0x4a	; 74	'J'
      0000CA 00                     311 	.db #0x00	; 0
      0000CB 00                     312 	.db #0x00	; 0
      0000CC 00                     313 	.db #0x00	; 0
      0000CD 00                     314 	.db #0x00	; 0
      0000CE 00                     315 	.db #0x00	; 0
      0000CF 00                     316 	.db #0x00	; 0
      0000D0 00                     317 	.db #0x00	; 0
      0000D1 00                     318 	.db #0x00	; 0
      0000D2 00                     319 	.db #0x00	; 0
      0000D3 00                     320 	.db #0x00	; 0
      0000D4 00                     321 	.db #0x00	; 0
      0000D5 00                     322 	.db #0x00	; 0
      0000D6 00                     323 	.db #0x00	; 0
      0000D7 00                     324 	.db #0x00	; 0
      0000D8 00                     325 	.db #0x00	; 0
      0000D9 00                     326 	.db #0x00	; 0
      0000DA 00                     327 	.db #0x00	; 0
      0000DB 00                     328 	.db #0x00	; 0
      0000DC 00                     329 	.db #0x00	; 0
      0000DD 00                     330 	.db #0x00	; 0
      0000DE 00                     331 	.db #0x00	; 0
      0000DF 00                     332 	.db #0x00	; 0
      0000E0 00                     333 	.db #0x00	; 0
      0000E1 00                     334 	.db #0x00	; 0
      0000E2 00                     335 	.db #0x00	; 0
      0000E3 00                     336 	.db #0x00	; 0
      0000E4 00                     337 	.db #0x00	; 0
      0000E5 00                     338 	.db #0x00	; 0
      0000E6 00                     339 	.db #0x00	; 0
      0000E7 00                     340 	.db #0x00	; 0
      0000E8 00                     341 	.db #0x00	; 0
      0000E9 00                     342 	.db #0x00	; 0
      0000EA 00                     343 	.db #0x00	; 0
      0000EB 00                     344 	.db #0x00	; 0
      0000EC 00                     345 	.db #0x00	; 0
      0000ED 00                     346 	.db #0x00	; 0
      0000EE 00                     347 	.db #0x00	; 0
      0000EF 00                     348 	.db #0x00	; 0
      0000F0 00                     349 	.db #0x00	; 0
      0000F1 00                     350 	.db #0x00	; 0
      0000F2 00                     351 	.db #0x00	; 0
      0000F3 00                     352 	.db #0x00	; 0
      0000F4 00                     353 	.db #0x00	; 0
      0000F5 00                     354 	.db #0x00	; 0
      0000F6 00                     355 	.db #0x00	; 0
      0000F7 00                     356 	.db #0x00	; 0
      0000F8 00                     357 	.db #0x00	; 0
      0000F9 00                     358 	.db #0x00	; 0
      0000FA 00                     359 	.db #0x00	; 0
      0000FB 00                     360 	.db #0x00	; 0
      0000FC 00                     361 	.db #0x00	; 0
      0000FD 00                     362 	.db #0x00	; 0
      0000FE 00                     363 	.db #0x00	; 0
      0000FF 00                     364 	.db #0x00	; 0
      000100 00                     365 	.db #0x00	; 0
      000101 00                     366 	.db #0x00	; 0
      000102 00                     367 	.db #0x00	; 0
      000103 00                     368 	.db #0x00	; 0
      000104 00                     369 	.db #0x00	; 0
      000105 00                     370 	.db #0x00	; 0
      000106 00                     371 	.db #0x00	; 0
      000107 00                     372 	.db #0x00	; 0
      000108 00                     373 	.db #0x00	; 0
      000109 00                     374 	.db #0x00	; 0
      00010A 00                     375 	.db #0x00	; 0
      00010B 00                     376 	.db #0x00	; 0
      00010C 00                     377 	.db #0x00	; 0
      00010D 00                     378 	.db #0x00	; 0
      00010E 00                     379 	.db #0x00	; 0
      00010F 00                     380 	.db #0x00	; 0
      000110 00                     381 	.db #0x00	; 0
      000111 00                     382 	.db #0x00	; 0
      000112 00                     383 	.db #0x00	; 0
      000113 00                     384 	.db #0x00	; 0
      000114 00                     385 	.db #0x00	; 0
      000115 00                     386 	.db #0x00	; 0
      000116 00                     387 	.db #0x00	; 0
      000117 00                     388 	.db #0x00	; 0
      000118 00                     389 	.db #0x00	; 0
      000119 00                     390 	.db #0x00	; 0
      00011A 00                     391 	.db #0x00	; 0
      00011B 00                     392 	.db #0x00	; 0
      00011C 00                     393 	.db #0x00	; 0
      00011D 00                     394 	.db #0x00	; 0
      00011E 00                     395 	.db #0x00	; 0
      00011F 00                     396 	.db #0x00	; 0
      000120 00                     397 	.db #0x00	; 0
      000121 00                     398 	.db #0x00	; 0
      000122 00                     399 	.db #0x00	; 0
      000123 00                     400 	.db #0x00	; 0
      000124 00                     401 	.db #0x00	; 0
      000125 00                     402 	.db #0x00	; 0
      000126 00                     403 	.db #0x00	; 0
      000127 00                     404 	.db #0x00	; 0
      000128 00                     405 	.db #0x00	; 0
      000129 00                     406 	.db #0x00	; 0
      00012A 00                     407 	.db #0x00	; 0
      00012B 00                     408 	.db #0x00	; 0
      00012C 00                     409 	.db #0x00	; 0
      00012D 00                     410 	.db #0x00	; 0
      00012E 00                     411 	.db #0x00	; 0
      00012F 00                     412 	.db #0x00	; 0
      000130 00                     413 	.db #0x00	; 0
      000131 00                     414 	.db #0x00	; 0
      000132 00                     415 	.db #0x00	; 0
      000133 00                     416 	.db #0x00	; 0
      000134 00                     417 	.db #0x00	; 0
      000135 00                     418 	.db #0x00	; 0
      000136 00                     419 	.db #0x00	; 0
      000137 00                     420 	.db #0x00	; 0
      000138 00                     421 	.db #0x00	; 0
      000139 00                     422 	.db #0x00	; 0
      00013A 00                     423 	.db #0x00	; 0
      00013B 00                     424 	.db #0x00	; 0
      00013C 00                     425 	.db #0x00	; 0
      00013D 00                     426 	.db #0x00	; 0
      00013E 00                     427 	.db #0x00	; 0
      00013F 00                     428 	.db #0x00	; 0
      000140 00                     429 	.db #0x00	; 0
      000141 00                     430 	.db #0x00	; 0
      000142 00                     431 	.db #0x00	; 0
      000143 00                     432 	.db #0x00	; 0
      000144 00                     433 	.db #0x00	; 0
      000145 00                     434 	.db #0x00	; 0
      000146 00                     435 	.db #0x00	; 0
      000147 00                     436 	.db #0x00	; 0
      000148 00                     437 	.db #0x00	; 0
      000149 00                     438 	.db #0x00	; 0
      00014A 00                     439 	.db #0x00	; 0
      00014B 00                     440 	.db #0x00	; 0
      00014C 00                     441 	.db #0x00	; 0
      00014D 00                     442 	.db #0x00	; 0
      00014E 00                     443 	.db #0x00	; 0
      00014F 00                     444 	.db #0x00	; 0
      000150 00                     445 	.db #0x00	; 0
      000151 00                     446 	.db #0x00	; 0
      000152 00                     447 	.db #0x00	; 0
      000153 00                     448 	.db #0x00	; 0
      000154 00                     449 	.db #0x00	; 0
      000155 00                     450 	.db #0x00	; 0
      000156 00                     451 	.db #0x00	; 0
      000157 00                     452 	.db #0x00	; 0
      000158 00                     453 	.db #0x00	; 0
      000159 00                     454 	.db #0x00	; 0
      00015A 00                     455 	.db #0x00	; 0
      00015B 00                     456 	.db #0x00	; 0
      00015C 00                     457 	.db #0x00	; 0
      00015D 00                     458 	.db #0x00	; 0
      00015E 00                     459 	.db #0x00	; 0
      00015F 00                     460 	.db #0x00	; 0
      000160 00                     461 	.db #0x00	; 0
      000161 00                     462 	.db #0x00	; 0
      000162 00                     463 	.db #0x00	; 0
      000163 00                     464 	.db #0x00	; 0
      000164 00                     465 	.db #0x00	; 0
      000165 00                     466 	.db #0x00	; 0
      000166 00                     467 	.db #0x00	; 0
      000167 00                     468 	.db #0x00	; 0
      000168 00                     469 	.db #0x00	; 0
      000169 00                     470 	.db #0x00	; 0
      00016A 00                     471 	.db #0x00	; 0
      00016B 00                     472 	.db #0x00	; 0
      00016C 00                     473 	.db #0x00	; 0
      00016D 00                     474 	.db #0x00	; 0
      00016E 00                     475 	.db #0x00	; 0
      00016F 00                     476 	.db #0x00	; 0
      000170 00                     477 	.db #0x00	; 0
      000171 00                     478 	.db #0x00	; 0
      000172 00                     479 	.db #0x00	; 0
      000173 00                     480 	.db #0x00	; 0
      000174 00                     481 	.db #0x00	; 0
      000175 00                     482 	.db #0x00	; 0
      000176 00                     483 	.db #0x00	; 0
      000177 00                     484 	.db #0x00	; 0
      000178 00                     485 	.db #0x00	; 0
      000179 00                     486 	.db #0x00	; 0
      00017A 00                     487 	.db #0x00	; 0
      00017B 00                     488 	.db #0x00	; 0
      00017C 00                     489 	.db #0x00	; 0
      00017D 00                     490 	.db #0x00	; 0
      00017E 00                     491 	.db #0x00	; 0
      00017F 00                     492 	.db #0x00	; 0
      000180 00                     493 	.db #0x00	; 0
      000181 00                     494 	.db #0x00	; 0
      000182 00                     495 	.db #0x00	; 0
      000183 00                     496 	.db #0x00	; 0
      000184 00                     497 	.db #0x00	; 0
      000185 00                     498 	.db #0x00	; 0
      000186 00                     499 	.db #0x00	; 0
      000187 00                     500 	.db #0x00	; 0
      000188 00                     501 	.db #0x00	; 0
      000189 00                     502 	.db #0x00	; 0
      00018A 00                     503 	.db #0x00	; 0
      00018B 00                     504 	.db #0x00	; 0
      00018C 00                     505 	.db #0x00	; 0
      00018D 00                     506 	.db #0x00	; 0
      00018E 00                     507 	.db #0x00	; 0
      00018F 00                     508 	.db #0x00	; 0
      000190 00                     509 	.db #0x00	; 0
      000191 00                     510 	.db #0x00	; 0
                           000192   511 G$test_dungeon$0_0$0 == .
      000192                        512 _test_dungeon:
      000192 00                     513 	.db #0x00	; 0
      000193 00                     514 	.db #0x00	; 0
      000194 00                     515 	.db #0x00	; 0
      000195 00                     516 	.db #0x00	; 0
      000196 00                     517 	.db #0x00	; 0
      000197 00                     518 	.db #0x00	; 0
      000198 00                     519 	.db #0x00	; 0
      000199 00                     520 	.db #0x00	; 0
      00019A 00                     521 	.db #0x00	; 0
      00019B 00                     522 	.db #0x00	; 0
      00019C 00                     523 	.db #0x00	; 0
      00019D 00                     524 	.db #0x00	; 0
      00019E 00                     525 	.db #0x00	; 0
      00019F 00                     526 	.db #0x00	; 0
      0001A0 00                     527 	.db #0x00	; 0
      0001A1 00                     528 	.db #0x00	; 0
      0001A2 00                     529 	.db #0x00	; 0
      0001A3 00                     530 	.db #0x00	; 0
      0001A4 00                     531 	.db #0x00	; 0
      0001A5 00                     532 	.db #0x00	; 0
      0001A6 00                     533 	.db #0x00	; 0
      0001A7 06                     534 	.db #0x06	; 6
      0001A8 00                     535 	.db #0x00	; 0
      0001A9 06                     536 	.db #0x06	; 6
      0001AA 00                     537 	.db #0x00	; 0
      0001AB 00                     538 	.db #0x00	; 0
      0001AC 00                     539 	.db #0x00	; 0
      0001AD 00                     540 	.db #0x00	; 0
      0001AE 00                     541 	.db #0x00	; 0
      0001AF 00                     542 	.db #0x00	; 0
      0001B0 00                     543 	.db #0x00	; 0
      0001B1 00                     544 	.db #0x00	; 0
      0001B2 00                     545 	.db #0x00	; 0
      0001B3 00                     546 	.db #0x00	; 0
      0001B4 00                     547 	.db #0x00	; 0
      0001B5 00                     548 	.db #0x00	; 0
      0001B6 05                     549 	.db #0x05	; 5
      0001B7 00                     550 	.db #0x00	; 0
      0001B8 05                     551 	.db #0x05	; 5
      0001B9 00                     552 	.db #0x00	; 0
      0001BA 00                     553 	.db #0x00	; 0
      0001BB 00                     554 	.db #0x00	; 0
      0001BC 00                     555 	.db #0x00	; 0
      0001BD 00                     556 	.db #0x00	; 0
      0001BE 00                     557 	.db #0x00	; 0
      0001BF 00                     558 	.db #0x00	; 0
      0001C0 00                     559 	.db #0x00	; 0
      0001C1 00                     560 	.db #0x00	; 0
      0001C2 00                     561 	.db #0x00	; 0
      0001C3 00                     562 	.db #0x00	; 0
      0001C4 00                     563 	.db #0x00	; 0
      0001C5 04                     564 	.db #0x04	; 4
      0001C6 00                     565 	.db #0x00	; 0
      0001C7 04                     566 	.db #0x04	; 4
      0001C8 00                     567 	.db #0x00	; 0
      0001C9 00                     568 	.db #0x00	; 0
      0001CA 00                     569 	.db #0x00	; 0
      0001CB 00                     570 	.db #0x00	; 0
      0001CC 00                     571 	.db #0x00	; 0
      0001CD 00                     572 	.db #0x00	; 0
      0001CE 00                     573 	.db #0x00	; 0
      0001CF 00                     574 	.db #0x00	; 0
      0001D0 00                     575 	.db #0x00	; 0
      0001D1 00                     576 	.db #0x00	; 0
      0001D2 00                     577 	.db #0x00	; 0
      0001D3 00                     578 	.db #0x00	; 0
      0001D4 03                     579 	.db #0x03	; 3
      0001D5 00                     580 	.db #0x00	; 0
      0001D6 03                     581 	.db #0x03	; 3
      0001D7 00                     582 	.db #0x00	; 0
      0001D8 00                     583 	.db #0x00	; 0
      0001D9 00                     584 	.db #0x00	; 0
      0001DA 00                     585 	.db #0x00	; 0
      0001DB 00                     586 	.db #0x00	; 0
      0001DC 00                     587 	.db #0x00	; 0
      0001DD 00                     588 	.db #0x00	; 0
      0001DE 00                     589 	.db #0x00	; 0
      0001DF 00                     590 	.db #0x00	; 0
      0001E0 00                     591 	.db #0x00	; 0
      0001E1 00                     592 	.db #0x00	; 0
      0001E2 00                     593 	.db #0x00	; 0
      0001E3 02                     594 	.db #0x02	; 2
      0001E4 00                     595 	.db #0x00	; 0
      0001E5 02                     596 	.db #0x02	; 2
      0001E6 03                     597 	.db #0x03	; 3
      0001E7 04                     598 	.db #0x04	; 4
      0001E8 05                     599 	.db #0x05	; 5
      0001E9 06                     600 	.db #0x06	; 6
      0001EA 00                     601 	.db #0x00	; 0
      0001EB 00                     602 	.db #0x00	; 0
      0001EC 00                     603 	.db #0x00	; 0
      0001ED 00                     604 	.db #0x00	; 0
      0001EE 00                     605 	.db #0x00	; 0
      0001EF 00                     606 	.db #0x00	; 0
      0001F0 02                     607 	.db #0x02	; 2
      0001F1 00                     608 	.db #0x00	; 0
      0001F2 00                     609 	.db #0x00	; 0
      0001F3 01                     610 	.db #0x01	; 1
      0001F4 00                     611 	.db #0x00	; 0
      0001F5 00                     612 	.db #0x00	; 0
      0001F6 00                     613 	.db #0x00	; 0
      0001F7 00                     614 	.db #0x00	; 0
      0001F8 00                     615 	.db #0x00	; 0
      0001F9 00                     616 	.db #0x00	; 0
      0001FA 00                     617 	.db #0x00	; 0
      0001FB 00                     618 	.db #0x00	; 0
      0001FC 00                     619 	.db #0x00	; 0
      0001FD 00                     620 	.db #0x00	; 0
      0001FE 00                     621 	.db #0x00	; 0
      0001FF 00                     622 	.db #0x00	; 0
      000200 00                     623 	.db #0x00	; 0
      000201 02                     624 	.db #0x02	; 2
      000202 00                     625 	.db #0x00	; 0
      000203 02                     626 	.db #0x02	; 2
      000204 03                     627 	.db #0x03	; 3
      000205 04                     628 	.db #0x04	; 4
      000206 05                     629 	.db #0x05	; 5
      000207 06                     630 	.db #0x06	; 6
      000208 00                     631 	.db #0x00	; 0
      000209 00                     632 	.db #0x00	; 0
      00020A 00                     633 	.db #0x00	; 0
      00020B 00                     634 	.db #0x00	; 0
      00020C 00                     635 	.db #0x00	; 0
      00020D 00                     636 	.db #0x00	; 0
      00020E 00                     637 	.db #0x00	; 0
      00020F 00                     638 	.db #0x00	; 0
      000210 00                     639 	.db #0x00	; 0
      000211 00                     640 	.db #0x00	; 0
      000212 00                     641 	.db #0x00	; 0
      000213 00                     642 	.db #0x00	; 0
      000214 00                     643 	.db #0x00	; 0
      000215 00                     644 	.db #0x00	; 0
      000216 00                     645 	.db #0x00	; 0
      000217 00                     646 	.db #0x00	; 0
      000218 00                     647 	.db #0x00	; 0
      000219 00                     648 	.db #0x00	; 0
      00021A 00                     649 	.db #0x00	; 0
      00021B 00                     650 	.db #0x00	; 0
      00021C 00                     651 	.db #0x00	; 0
      00021D 00                     652 	.db #0x00	; 0
      00021E 00                     653 	.db #0x00	; 0
      00021F 00                     654 	.db #0x00	; 0
      000220 02                     655 	.db #0x02	; 2
      000221 00                     656 	.db #0x00	; 0
      000222 00                     657 	.db #0x00	; 0
      000223 00                     658 	.db #0x00	; 0
      000224 00                     659 	.db #0x00	; 0
      000225 00                     660 	.db #0x00	; 0
      000226 00                     661 	.db #0x00	; 0
      000227 00                     662 	.db #0x00	; 0
      000228 00                     663 	.db #0x00	; 0
      000229 00                     664 	.db #0x00	; 0
      00022A 00                     665 	.db #0x00	; 0
      00022B 00                     666 	.db #0x00	; 0
      00022C 00                     667 	.db #0x00	; 0
      00022D 00                     668 	.db #0x00	; 0
      00022E 00                     669 	.db #0x00	; 0
      00022F 02                     670 	.db #0x02	; 2
      000230 00                     671 	.db #0x00	; 0
      000231 00                     672 	.db #0x00	; 0
      000232 00                     673 	.db #0x00	; 0
      000233 00                     674 	.db #0x00	; 0
      000234 00                     675 	.db #0x00	; 0
      000235 00                     676 	.db #0x00	; 0
      000236 00                     677 	.db #0x00	; 0
      000237 00                     678 	.db #0x00	; 0
      000238 00                     679 	.db #0x00	; 0
      000239 00                     680 	.db #0x00	; 0
      00023A 00                     681 	.db #0x00	; 0
      00023B 00                     682 	.db #0x00	; 0
      00023C 00                     683 	.db #0x00	; 0
      00023D 00                     684 	.db #0x00	; 0
      00023E 00                     685 	.db #0x00	; 0
      00023F 00                     686 	.db #0x00	; 0
      000240 00                     687 	.db #0x00	; 0
      000241 00                     688 	.db #0x00	; 0
      000242 00                     689 	.db #0x00	; 0
      000243 00                     690 	.db #0x00	; 0
      000244 00                     691 	.db #0x00	; 0
      000245 00                     692 	.db #0x00	; 0
      000246 00                     693 	.db #0x00	; 0
      000247 00                     694 	.db #0x00	; 0
      000248 00                     695 	.db #0x00	; 0
      000249 00                     696 	.db #0x00	; 0
      00024A 00                     697 	.db #0x00	; 0
      00024B 00                     698 	.db #0x00	; 0
      00024C 00                     699 	.db #0x00	; 0
      00024D 00                     700 	.db #0x00	; 0
      00024E 00                     701 	.db #0x00	; 0
      00024F 00                     702 	.db #0x00	; 0
      000250 00                     703 	.db #0x00	; 0
      000251 00                     704 	.db #0x00	; 0
      000252 00                     705 	.db #0x00	; 0
      000253 00                     706 	.db #0x00	; 0
      000254 00                     707 	.db #0x00	; 0
      000255 00                     708 	.db #0x00	; 0
      000256 00                     709 	.db #0x00	; 0
      000257 00                     710 	.db #0x00	; 0
      000258 00                     711 	.db #0x00	; 0
      000259 00                     712 	.db #0x00	; 0
      00025A 00                     713 	.db #0x00	; 0
      00025B 00                     714 	.db #0x00	; 0
      00025C 00                     715 	.db #0x00	; 0
      00025D 00                     716 	.db #0x00	; 0
      00025E 00                     717 	.db #0x00	; 0
      00025F 00                     718 	.db #0x00	; 0
      000260 00                     719 	.db #0x00	; 0
      000261 00                     720 	.db #0x00	; 0
      000262 00                     721 	.db #0x00	; 0
      000263 00                     722 	.db #0x00	; 0
      000264 00                     723 	.db #0x00	; 0
      000265 00                     724 	.db #0x00	; 0
      000266 00                     725 	.db #0x00	; 0
      000267 00                     726 	.db #0x00	; 0
      000268 00                     727 	.db #0x00	; 0
      000269 00                     728 	.db #0x00	; 0
      00026A 00                     729 	.db #0x00	; 0
      00026B 00                     730 	.db #0x00	; 0
      00026C 00                     731 	.db #0x00	; 0
      00026D 00                     732 	.db #0x00	; 0
      00026E 00                     733 	.db #0x00	; 0
      00026F 00                     734 	.db #0x00	; 0
      000270 00                     735 	.db #0x00	; 0
      000271 00                     736 	.db #0x00	; 0
      000272 00                     737 	.db #0x00	; 0
                           000273   738 	G$update_dng$0$0	= .
                                    739 	.globl	G$update_dng$0$0
                           000273   740 	C$main.c$94$1_0$121	= .
                                    741 	.globl	C$main.c$94$1_0$121
                                    742 ;src/main.c:94: void update_dng(unsigned char *dng,uint8_t dungeon_width, uint8_t dungeon_hieght){
                                    743 ;	---------------------------------
                                    744 ; Function update_dng
                                    745 ; ---------------------------------
      000273                        746 _update_dng::
      000273 4F               [ 4]  747 	ld	c, a
                           000274   748 	C$main.c$97$1_0$121	= .
                                    749 	.globl	C$main.c$97$1_0$121
                                    750 ;src/main.c:97: set_bkg_tiles(0,0,20,13,white_screen);
      000274 D5               [16]  751 	push	de
      000275 21r8Er00         [12]  752 	ld	hl, #_white_screen
      000278 E5               [16]  753 	push	hl
      000279 21 14 0D         [12]  754 	ld	hl, #0xd14
      00027C E5               [16]  755 	push	hl
      00027D AF               [ 4]  756 	xor	a, a
      00027E 0F               [ 4]  757 	rrca
      00027F F5               [16]  758 	push	af
      000280 CDr00r00         [24]  759 	call	_set_bkg_tiles
      000283 E8 06            [16]  760 	add	sp, #6
      000285 D1               [12]  761 	pop	de
                           000286   762 	C$main.c$99$1_0$121	= .
                                    763 	.globl	C$main.c$99$1_0$121
                                    764 ;src/main.c:99: check_l_walls(dng,dungeon_width,dungeon_hieght,player_x, player_y, player_dir);
      000286 C5               [16]  765 	push	bc
      000287 D5               [16]  766 	push	de
      000288 FAr6Er00         [16]  767 	ld	a, (#_player_dir)
      00028B 67               [ 4]  768 	ld	h, a
      00028C FAr04r00         [16]  769 	ld	a, (#_player_y)
      00028F 6F               [ 4]  770 	ld	l, a
      000290 E5               [16]  771 	push	hl
      000291 FAr03r00         [16]  772 	ld	a, (#_player_x)
      000294 F5               [16]  773 	push	af
      000295 33               [ 8]  774 	inc	sp
      000296 F8 09            [12]  775 	ldhl	sp,	#9
      000298 7E               [ 8]  776 	ld	a, (hl)
      000299 F5               [16]  777 	push	af
      00029A 33               [ 8]  778 	inc	sp
      00029B 79               [ 4]  779 	ld	a, c
      00029C CDr00r00         [24]  780 	call	_check_l_walls
      00029F D1               [12]  781 	pop	de
      0002A0 C1               [12]  782 	pop	bc
                           0002A1   783 	C$main.c$100$1_0$121	= .
                                    784 	.globl	C$main.c$100$1_0$121
                                    785 ;src/main.c:100: check_r_walls(dng,dungeon_width,dungeon_hieght,player_x, player_y, player_dir);
      0002A1 C5               [16]  786 	push	bc
      0002A2 D5               [16]  787 	push	de
      0002A3 FAr6Er00         [16]  788 	ld	a, (#_player_dir)
      0002A6 67               [ 4]  789 	ld	h, a
      0002A7 FAr04r00         [16]  790 	ld	a, (#_player_y)
      0002AA 6F               [ 4]  791 	ld	l, a
      0002AB E5               [16]  792 	push	hl
      0002AC FAr03r00         [16]  793 	ld	a, (#_player_x)
      0002AF F5               [16]  794 	push	af
      0002B0 33               [ 8]  795 	inc	sp
      0002B1 F8 09            [12]  796 	ldhl	sp,	#9
      0002B3 7E               [ 8]  797 	ld	a, (hl)
      0002B4 F5               [16]  798 	push	af
      0002B5 33               [ 8]  799 	inc	sp
      0002B6 79               [ 4]  800 	ld	a, c
      0002B7 CDr00r00         [24]  801 	call	_check_r_walls
      0002BA D1               [12]  802 	pop	de
      0002BB C1               [12]  803 	pop	bc
                           0002BC   804 	C$main.c$101$1_0$121	= .
                                    805 	.globl	C$main.c$101$1_0$121
                                    806 ;src/main.c:101: check_m_walls(dng,dungeon_width,dungeon_hieght, player_x, player_y,player_dir);
      0002BC FAr6Er00         [16]  807 	ld	a, (#_player_dir)
      0002BF 67               [ 4]  808 	ld	h, a
      0002C0 FAr04r00         [16]  809 	ld	a, (#_player_y)
      0002C3 6F               [ 4]  810 	ld	l, a
      0002C4 E5               [16]  811 	push	hl
      0002C5 FAr03r00         [16]  812 	ld	a, (#_player_x)
      0002C8 F5               [16]  813 	push	af
      0002C9 33               [ 8]  814 	inc	sp
      0002CA F8 05            [12]  815 	ldhl	sp,	#5
      0002CC 7E               [ 8]  816 	ld	a, (hl)
      0002CD F5               [16]  817 	push	af
      0002CE 33               [ 8]  818 	inc	sp
      0002CF 79               [ 4]  819 	ld	a, c
      0002D0 CDr00r00         [24]  820 	call	_check_m_walls
                           0002D3   821 	C$main.c$103$1_0$121	= .
                                    822 	.globl	C$main.c$103$1_0$121
                                    823 ;src/main.c:103: }
      0002D3 E1               [12]  824 	pop	hl
      0002D4 33               [ 8]  825 	inc	sp
      0002D5 E9               [ 4]  826 	jp	(hl)
                           0002D6   827 	G$collision_check$0$0	= .
                                    828 	.globl	G$collision_check$0$0
                           0002D6   829 	C$main.c$105$1_0$124	= .
                                    830 	.globl	C$main.c$105$1_0$124
                                    831 ;src/main.c:105: void collision_check(const unsigned char *dng, uint8_t dng_width, uint8_t dng_height){
                                    832 ;	---------------------------------
                                    833 ; Function collision_check
                                    834 ; ---------------------------------
      0002D6                        835 _collision_check::
                           0002D6   836 	C$main.c$107$1_0$124	= .
                                    837 	.globl	C$main.c$107$1_0$124
                                    838 ;src/main.c:107: }
      0002D6 E1               [12]  839 	pop	hl
      0002D7 33               [ 8]  840 	inc	sp
      0002D8 E9               [ 4]  841 	jp	(hl)
                           0002D9   842 	G$init_dng_UI$0$0	= .
                                    843 	.globl	G$init_dng_UI$0$0
                           0002D9   844 	C$main.c$109$1_0$125	= .
                                    845 	.globl	C$main.c$109$1_0$125
                                    846 ;src/main.c:109: void init_dng_UI(){
                                    847 ;	---------------------------------
                                    848 ; Function init_dng_UI
                                    849 ; ---------------------------------
      0002D9                        850 _init_dng_UI::
                                    851 ;../gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      0002D9 21r00r00         [12]  852 	ld	hl, #_shadow_OAM
                                    853 ;../gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      0002DC 3E 14            [ 8]  854 	ld	a, #0x14
      0002DE 22               [ 8]  855 	ld	(hl+), a
      0002DF 36 50            [12]  856 	ld	(hl), #0x50
                                    857 ;../gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      0002E1 21r04r00         [12]  858 	ld	hl, #(_shadow_OAM + 4)
                                    859 ;../gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      0002E4 3E 1C            [ 8]  860 	ld	a, #0x1c
      0002E6 22               [ 8]  861 	ld	(hl+), a
      0002E7 36 50            [12]  862 	ld	(hl), #0x50
                                    863 ;../gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      0002E9 21r08r00         [12]  864 	ld	hl, #(_shadow_OAM + 8)
                                    865 ;../gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      0002EC 3E 1C            [ 8]  866 	ld	a, #0x1c
      0002EE 22               [ 8]  867 	ld	(hl+), a
      0002EF 36 58            [12]  868 	ld	(hl), #0x58
                                    869 ;../gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      0002F1 21r0Cr00         [12]  870 	ld	hl, #(_shadow_OAM + 12)
                                    871 ;../gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      0002F4 3E 14            [ 8]  872 	ld	a, #0x14
      0002F6 22               [ 8]  873 	ld	(hl+), a
      0002F7 36 58            [12]  874 	ld	(hl), #0x58
                                    875 ;../gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      0002F9 21r10r00         [12]  876 	ld	hl, #(_shadow_OAM + 16)
                                    877 ;../gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      0002FC 3E 14            [ 8]  878 	ld	a, #0x14
      0002FE 22               [ 8]  879 	ld	(hl+), a
      0002FF 36 40            [12]  880 	ld	(hl), #0x40
                                    881 ;../gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      000301 21r14r00         [12]  882 	ld	hl, #(_shadow_OAM + 20)
                                    883 ;../gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      000304 3E 14            [ 8]  884 	ld	a, #0x14
      000306 22               [ 8]  885 	ld	(hl+), a
      000307 36 68            [12]  886 	ld	(hl), #0x68
                                    887 ;../gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      000309 21r18r00         [12]  888 	ld	hl, #(_shadow_OAM + 24)
                                    889 ;../gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      00030C 3E 14            [ 8]  890 	ld	a, #0x14
      00030E 22               [ 8]  891 	ld	(hl+), a
      00030F 36 90            [12]  892 	ld	(hl), #0x90
                                    893 ;../gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      000311 21r1Cr00         [12]  894 	ld	hl, #(_shadow_OAM + 28)
                                    895 ;../gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      000314 3E 1C            [ 8]  896 	ld	a, #0x1c
      000316 22               [ 8]  897 	ld	(hl+), a
      000317 36 90            [12]  898 	ld	(hl), #0x90
                                    899 ;../gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      000319 21r20r00         [12]  900 	ld	hl, #(_shadow_OAM + 32)
                                    901 ;../gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      00031C 3E 14            [ 8]  902 	ld	a, #0x14
      00031E 22               [ 8]  903 	ld	(hl+), a
      00031F 36 98            [12]  904 	ld	(hl), #0x98
                                    905 ;../gbdk/include/gb/gb.h:1675: OAM_item_t * itm = &shadow_OAM[nb];
      000321 21r24r00         [12]  906 	ld	hl, #(_shadow_OAM + 36)
                                    907 ;../gbdk/include/gb/gb.h:1676: itm->y=y, itm->x=x;
      000324 3E 1C            [ 8]  908 	ld	a, #0x1c
      000326 22               [ 8]  909 	ld	(hl+), a
      000327 36 98            [12]  910 	ld	(hl), #0x98
                           000329   911 	C$main.c$122$3_0$125	= .
                                    912 	.globl	C$main.c$122$3_0$125
                                    913 ;src/main.c:122: move_sprite(9,152,28);
                           000329   914 	C$main.c$125$3_0$125	= .
                                    915 	.globl	C$main.c$125$3_0$125
                                    916 ;src/main.c:125: }
                           000329   917 	C$main.c$125$3_0$125	= .
                                    918 	.globl	C$main.c$125$3_0$125
                           000329   919 	XG$init_dng_UI$0$0	= .
                                    920 	.globl	XG$init_dng_UI$0$0
      000329 C9               [16]  921 	ret
                           00032A   922 	G$update_dng_UI$0$0	= .
                                    923 	.globl	G$update_dng_UI$0$0
                           00032A   924 	C$main.c$127$3_0$156	= .
                                    925 	.globl	C$main.c$127$3_0$156
                                    926 ;src/main.c:127: void update_dng_UI (){
                                    927 ;	---------------------------------
                                    928 ; Function update_dng_UI
                                    929 ; ---------------------------------
      00032A                        930 _update_dng_UI::
                                    931 ;../gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      00032A 21r03r00         [12]  932 	ld	hl, #(_shadow_OAM + 3)
      00032D 36 00            [12]  933 	ld	(hl), #0x00
      00032F 21r07r00         [12]  934 	ld	hl, #(_shadow_OAM + 7)
      000332 36 00            [12]  935 	ld	(hl), #0x00
      000334 21r0Br00         [12]  936 	ld	hl, #(_shadow_OAM + 11)
      000337 36 00            [12]  937 	ld	(hl), #0x00
      000339 21r0Fr00         [12]  938 	ld	hl, #(_shadow_OAM + 15)
      00033C 36 00            [12]  939 	ld	(hl), #0x00
                           00033E   940 	C$main.c$133$1_0$156	= .
                                    941 	.globl	C$main.c$133$1_0$156
                                    942 ;src/main.c:133: switch(player_dir){
      00033E FAr6Er00         [16]  943 	ld	a, (#_player_dir)
      000341 B7               [ 4]  944 	or	a, a
      000342 28 17            [12]  945 	jr	Z, 00101$
      000344 FAr6Er00         [16]  946 	ld	a, (#_player_dir)
      000347 3D               [ 4]  947 	dec	a
      000348 28 31            [12]  948 	jr	Z, 00102$
      00034A FAr6Er00         [16]  949 	ld	a, (#_player_dir)
      00034D D6 02            [ 8]  950 	sub	a, #0x02
      00034F 28 4A            [12]  951 	jr	Z, 00103$
      000351 FAr6Er00         [16]  952 	ld	a, (#_player_dir)
      000354 D6 03            [ 8]  953 	sub	a, #0x03
      000356 28 63            [12]  954 	jr	Z, 00104$
      000358 C3rD9r03         [16]  955 	jp	00105$
                           00035B   956 	C$main.c$134$2_0$157	= .
                                    957 	.globl	C$main.c$134$2_0$157
                                    958 ;src/main.c:134: case 0:            
      00035B                        959 00101$:
                                    960 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00035B 21r02r00         [12]  961 	ld	hl, #(_shadow_OAM + 2)
      00035E 36 01            [12]  962 	ld	(hl), #0x01
      000360 21r06r00         [12]  963 	ld	hl, #(_shadow_OAM + 6)
      000363 36 02            [12]  964 	ld	(hl), #0x02
      000365 21r0Ar00         [12]  965 	ld	hl, #(_shadow_OAM + 10)
      000368 36 01            [12]  966 	ld	(hl), #0x01
      00036A 21r0Er00         [12]  967 	ld	hl, #(_shadow_OAM + 14)
      00036D 36 02            [12]  968 	ld	(hl), #0x02
                                    969 ;../gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      00036F 21r0Br00         [12]  970 	ld	hl, #(_shadow_OAM + 11)
      000372 36 60            [12]  971 	ld	(hl), #0x60
      000374 21r0Fr00         [12]  972 	ld	hl, #(_shadow_OAM + 15)
      000377 36 60            [12]  973 	ld	(hl), #0x60
                           000379   974 	C$main.c$141$2_0$157	= .
                                    975 	.globl	C$main.c$141$2_0$157
                                    976 ;src/main.c:141: break;
      000379 18 5E            [12]  977 	jr	00105$
                           00037B   978 	C$main.c$143$2_0$157	= .
                                    979 	.globl	C$main.c$143$2_0$157
                                    980 ;src/main.c:143: case 1:            
      00037B                        981 00102$:
                                    982 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00037B 21r02r00         [12]  983 	ld	hl, #(_shadow_OAM + 2)
      00037E 36 03            [12]  984 	ld	(hl), #0x03
      000380 21r06r00         [12]  985 	ld	hl, #(_shadow_OAM + 6)
      000383 36 03            [12]  986 	ld	(hl), #0x03
      000385 21r0Ar00         [12]  987 	ld	hl, #(_shadow_OAM + 10)
      000388 36 04            [12]  988 	ld	(hl), #0x04
      00038A 21r0Er00         [12]  989 	ld	hl, #(_shadow_OAM + 14)
      00038D 36 04            [12]  990 	ld	(hl), #0x04
                                    991 ;../gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      00038F 21r0Br00         [12]  992 	ld	hl, #(_shadow_OAM + 11)
      000392 36 40            [12]  993 	ld	(hl), #0x40
      000394 21r07r00         [12]  994 	ld	hl, #(_shadow_OAM + 7)
      000397 36 40            [12]  995 	ld	(hl), #0x40
                           000399   996 	C$main.c$150$2_0$157	= .
                                    997 	.globl	C$main.c$150$2_0$157
                                    998 ;src/main.c:150: break;
      000399 18 3E            [12]  999 	jr	00105$
                           00039B  1000 	C$main.c$152$2_0$157	= .
                                   1001 	.globl	C$main.c$152$2_0$157
                                   1002 ;src/main.c:152: case 2:
      00039B                       1003 00103$:
                                   1004 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00039B 21r02r00         [12] 1005 	ld	hl, #(_shadow_OAM + 2)
      00039E 36 06            [12] 1006 	ld	(hl), #0x06
      0003A0 21r06r00         [12] 1007 	ld	hl, #(_shadow_OAM + 6)
      0003A3 36 05            [12] 1008 	ld	(hl), #0x05
      0003A5 21r0Ar00         [12] 1009 	ld	hl, #(_shadow_OAM + 10)
      0003A8 36 06            [12] 1010 	ld	(hl), #0x06
      0003AA 21r0Er00         [12] 1011 	ld	hl, #(_shadow_OAM + 14)
      0003AD 36 05            [12] 1012 	ld	(hl), #0x05
                                   1013 ;../gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      0003AF 21r07r00         [12] 1014 	ld	hl, #(_shadow_OAM + 7)
      0003B2 36 60            [12] 1015 	ld	(hl), #0x60
      0003B4 21r0Br00         [12] 1016 	ld	hl, #(_shadow_OAM + 11)
      0003B7 36 60            [12] 1017 	ld	(hl), #0x60
                           0003B9  1018 	C$main.c$161$2_0$157	= .
                                   1019 	.globl	C$main.c$161$2_0$157
                                   1020 ;src/main.c:161: break;
      0003B9 18 1E            [12] 1021 	jr	00105$
                           0003BB  1022 	C$main.c$163$2_0$157	= .
                                   1023 	.globl	C$main.c$163$2_0$157
                                   1024 ;src/main.c:163: case 3:
      0003BB                       1025 00104$:
                                   1026 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      0003BB 21r02r00         [12] 1027 	ld	hl, #(_shadow_OAM + 2)
      0003BE 36 07            [12] 1028 	ld	(hl), #0x07
      0003C0 21r06r00         [12] 1029 	ld	hl, #(_shadow_OAM + 6)
      0003C3 36 08            [12] 1030 	ld	(hl), #0x08
      0003C5 21r0Ar00         [12] 1031 	ld	hl, #(_shadow_OAM + 10)
      0003C8 36 08            [12] 1032 	ld	(hl), #0x08
      0003CA 21r0Er00         [12] 1033 	ld	hl, #(_shadow_OAM + 14)
      0003CD 36 07            [12] 1034 	ld	(hl), #0x07
                                   1035 ;../gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      0003CF 21r0Br00         [12] 1036 	ld	hl, #(_shadow_OAM + 11)
      0003D2 36 20            [12] 1037 	ld	(hl), #0x20
      0003D4 21r0Fr00         [12] 1038 	ld	hl, #(_shadow_OAM + 15)
      0003D7 36 20            [12] 1039 	ld	(hl), #0x20
                           0003D9  1040 	C$main.c$171$1_0$156	= .
                                   1041 	.globl	C$main.c$171$1_0$156
                                   1042 ;src/main.c:171: }
      0003D9                       1043 00105$:
                           0003D9  1044 	C$main.c$174$1_0$156	= .
                                   1045 	.globl	C$main.c$174$1_0$156
                                   1046 ;src/main.c:174: switch(player_dir){
      0003D9 FAr6Er00         [16] 1047 	ld	a, (#_player_dir)
      0003DC B7               [ 4] 1048 	or	a, a
      0003DD 28 16            [12] 1049 	jr	Z, 00106$
      0003DF FAr6Er00         [16] 1050 	ld	a, (#_player_dir)
      0003E2 3D               [ 4] 1051 	dec	a
      0003E3 28 1C            [12] 1052 	jr	Z, 00107$
      0003E5 FAr6Er00         [16] 1053 	ld	a, (#_player_dir)
      0003E8 D6 02            [ 8] 1054 	sub	a, #0x02
      0003EA 28 21            [12] 1055 	jr	Z, 00108$
      0003EC FAr6Er00         [16] 1056 	ld	a, (#_player_dir)
      0003EF D6 03            [ 8] 1057 	sub	a, #0x03
      0003F1 28 26            [12] 1058 	jr	Z, 00109$
      0003F3 18 2E            [12] 1059 	jr	00110$
                           0003F5  1060 	C$main.c$175$2_0$158	= .
                                   1061 	.globl	C$main.c$175$2_0$158
                                   1062 ;src/main.c:175: case 0:            
      0003F5                       1063 00106$:
                                   1064 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      0003F5 21r12r00         [12] 1065 	ld	hl, #(_shadow_OAM + 18)
      0003F8 36 0C            [12] 1066 	ld	(hl), #0x0c
      0003FA 21r16r00         [12] 1067 	ld	hl, #(_shadow_OAM + 22)
      0003FD 36 0A            [12] 1068 	ld	(hl), #0x0a
                           0003FF  1069 	C$main.c$178$2_0$158	= .
                                   1070 	.globl	C$main.c$178$2_0$158
                                   1071 ;src/main.c:178: break;
      0003FF 18 22            [12] 1072 	jr	00110$
                           000401  1073 	C$main.c$180$2_0$158	= .
                                   1074 	.globl	C$main.c$180$2_0$158
                                   1075 ;src/main.c:180: case 1:            
      000401                       1076 00107$:
                                   1077 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      000401 21r12r00         [12] 1078 	ld	hl, #(_shadow_OAM + 18)
      000404 36 09            [12] 1079 	ld	(hl), #0x09
      000406 21r16r00         [12] 1080 	ld	hl, #(_shadow_OAM + 22)
      000409 36 0B            [12] 1081 	ld	(hl), #0x0b
                           00040B  1082 	C$main.c$183$2_0$158	= .
                                   1083 	.globl	C$main.c$183$2_0$158
                                   1084 ;src/main.c:183: break;
      00040B 18 16            [12] 1085 	jr	00110$
                           00040D  1086 	C$main.c$185$2_0$158	= .
                                   1087 	.globl	C$main.c$185$2_0$158
                                   1088 ;src/main.c:185: case 2:
      00040D                       1089 00108$:
                                   1090 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00040D 21r12r00         [12] 1091 	ld	hl, #(_shadow_OAM + 18)
      000410 36 0A            [12] 1092 	ld	(hl), #0x0a
      000412 21r16r00         [12] 1093 	ld	hl, #(_shadow_OAM + 22)
      000415 36 0C            [12] 1094 	ld	(hl), #0x0c
                           000417  1095 	C$main.c$190$2_0$158	= .
                                   1096 	.globl	C$main.c$190$2_0$158
                                   1097 ;src/main.c:190: break;
      000417 18 0A            [12] 1098 	jr	00110$
                           000419  1099 	C$main.c$192$2_0$158	= .
                                   1100 	.globl	C$main.c$192$2_0$158
                                   1101 ;src/main.c:192: case 3:
      000419                       1102 00109$:
                                   1103 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      000419 21r12r00         [12] 1104 	ld	hl, #(_shadow_OAM + 18)
      00041C 36 0B            [12] 1105 	ld	(hl), #0x0b
      00041E 21r16r00         [12] 1106 	ld	hl, #(_shadow_OAM + 22)
      000421 36 09            [12] 1107 	ld	(hl), #0x09
                           000423  1108 	C$main.c$196$1_0$156	= .
                                   1109 	.globl	C$main.c$196$1_0$156
                                   1110 ;src/main.c:196: }
      000423                       1111 00110$:
                                   1112 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      000423 21r1Ar00         [12] 1113 	ld	hl, #(_shadow_OAM + 26)
      000426 36 0E            [12] 1114 	ld	(hl), #0x0e
      000428 21r1Er00         [12] 1115 	ld	hl, #(_shadow_OAM + 30)
      00042B 36 0E            [12] 1116 	ld	(hl), #0x0e
                                   1117 ;../gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      00042D 21r1Fr00         [12] 1118 	ld	hl, #(_shadow_OAM + 31)
      000430 36 40            [12] 1119 	ld	(hl), #0x40
                                   1120 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      000432 21r22r00         [12] 1121 	ld	hl, #(_shadow_OAM + 34)
      000435 36 0D            [12] 1122 	ld	(hl), #0x0d
                                   1123 ;../gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      000437 21r23r00         [12] 1124 	ld	hl, #(_shadow_OAM + 35)
      00043A 36 20            [12] 1125 	ld	(hl), #0x20
                                   1126 ;../gbdk/include/gb/gb.h:1602: shadow_OAM[nb].tile=tile;
      00043C 21r26r00         [12] 1127 	ld	hl, #(_shadow_OAM + 38)
      00043F 36 0D            [12] 1128 	ld	(hl), #0x0d
                                   1129 ;../gbdk/include/gb/gb.h:1648: shadow_OAM[nb].prop=prop;
      000441 21r27r00         [12] 1130 	ld	hl, #(_shadow_OAM + 39)
      000444 36 60            [12] 1131 	ld	(hl), #0x60
                           000446  1132 	C$main.c$205$3_0$156	= .
                                   1133 	.globl	C$main.c$205$3_0$156
                                   1134 ;src/main.c:205: set_sprite_prop(9,S_FLIPX | S_FLIPY);
                           000446  1135 	C$main.c$208$3_0$156	= .
                                   1136 	.globl	C$main.c$208$3_0$156
                                   1137 ;src/main.c:208: }
                           000446  1138 	C$main.c$208$3_0$156	= .
                                   1139 	.globl	C$main.c$208$3_0$156
                           000446  1140 	XG$update_dng_UI$0$0	= .
                                   1141 	.globl	XG$update_dng_UI$0$0
      000446 C9               [16] 1142 	ret
                           000447  1143 	G$dungeon_logic_upd$0$0	= .
                                   1144 	.globl	G$dungeon_logic_upd$0$0
                           000447  1145 	C$main.c$210$3_0$288	= .
                                   1146 	.globl	C$main.c$210$3_0$288
                                   1147 ;src/main.c:210: void dungeon_logic_upd(){
                                   1148 ;	---------------------------------
                                   1149 ; Function dungeon_logic_upd
                                   1150 ; ---------------------------------
      000447                       1151 _dungeon_logic_upd::
                           000447  1152 	C$main.c$211$1_0$288	= .
                                   1153 	.globl	C$main.c$211$1_0$288
                                   1154 ;src/main.c:211: joypad_previous = joypad_current;
      000447 FAr6Fr00         [16] 1155 	ld	a, (#_joypad_current)
      00044A EAr70r00         [16] 1156 	ld	(#_joypad_previous),a
                           00044D  1157 	C$main.c$212$1_0$288	= .
                                   1158 	.globl	C$main.c$212$1_0$288
                                   1159 ;src/main.c:212: joypad_current = joypad();
      00044D CDr00r00         [24] 1160 	call	_joypad
      000450 21r6Fr00         [12] 1161 	ld	hl, #_joypad_current
      000453 77               [ 8] 1162 	ld	(hl), a
                           000454  1163 	C$main.c$214$1_0$288	= .
                                   1164 	.globl	C$main.c$214$1_0$288
                                   1165 ;src/main.c:214: if((joypad_current & J_LEFT) && !(joypad_previous & J_LEFT)){
      000454 CB 4E            [12] 1166 	bit	1, (hl)
      000456 28 20            [12] 1167 	jr	Z, 00104$
      000458 FAr70r00         [16] 1168 	ld	a, (#_joypad_previous)
      00045B CB 4F            [ 8] 1169 	bit	1, a
      00045D 20 19            [12] 1170 	jr	NZ, 00104$
                           00045F  1171 	C$main.c$215$2_0$289	= .
                                   1172 	.globl	C$main.c$215$2_0$289
                                   1173 ;src/main.c:215: player_dir--;
      00045F 21r6Er00         [12] 1174 	ld	hl, #_player_dir
      000462 35               [12] 1175 	dec	(hl)
                           000463  1176 	C$main.c$216$2_0$289	= .
                                   1177 	.globl	C$main.c$216$2_0$289
                                   1178 ;src/main.c:216: if (player_dir==255){
      000463 7E               [ 8] 1179 	ld	a, (hl)
      000464 3C               [ 4] 1180 	inc	a
      000465 20 05            [12] 1181 	jr	NZ, 00102$
                           000467  1182 	C$main.c$217$3_0$290	= .
                                   1183 	.globl	C$main.c$217$3_0$290
                                   1184 ;src/main.c:217: player_dir = west;
      000467 21r6Er00         [12] 1185 	ld	hl, #_player_dir
      00046A 36 03            [12] 1186 	ld	(hl), #0x03
      00046C                       1187 00102$:
                           00046C  1188 	C$main.c$219$2_0$289	= .
                                   1189 	.globl	C$main.c$219$2_0$289
                                   1190 ;src/main.c:219: update_dng(test_dungeon,15,15);
      00046C 3E 0F            [ 8] 1191 	ld	a, #0x0f
      00046E F5               [16] 1192 	push	af
      00046F 33               [ 8] 1193 	inc	sp
      000470 3E 0F            [ 8] 1194 	ld	a, #0x0f
      000472 11r92r01         [12] 1195 	ld	de, #_test_dungeon
      000475 CDr73r02         [24] 1196 	call	_update_dng
      000478                       1197 00104$:
                           000478  1198 	C$main.c$223$1_0$288	= .
                                   1199 	.globl	C$main.c$223$1_0$288
                                   1200 ;src/main.c:223: if((joypad_current & J_RIGHT) && !(joypad_previous & J_RIGHT)){
      000478 FAr6Fr00         [16] 1201 	ld	a, (#_joypad_current)
      00047B 0F               [ 4] 1202 	rrca
      00047C 30 20            [12] 1203 	jr	NC, 00109$
      00047E FAr70r00         [16] 1204 	ld	a, (#_joypad_previous)
      000481 0F               [ 4] 1205 	rrca
      000482 38 1A            [12] 1206 	jr	C, 00109$
                           000484  1207 	C$main.c$224$2_0$291	= .
                                   1208 	.globl	C$main.c$224$2_0$291
                                   1209 ;src/main.c:224: player_dir++;
      000484 21r6Er00         [12] 1210 	ld	hl, #_player_dir
      000487 34               [12] 1211 	inc	(hl)
                           000488  1212 	C$main.c$225$2_0$291	= .
                                   1213 	.globl	C$main.c$225$2_0$291
                                   1214 ;src/main.c:225: if(player_dir==4){
      000488 7E               [ 8] 1215 	ld	a, (hl)
      000489 D6 04            [ 8] 1216 	sub	a, #0x04
      00048B 20 05            [12] 1217 	jr	NZ, 00107$
                           00048D  1218 	C$main.c$226$3_0$292	= .
                                   1219 	.globl	C$main.c$226$3_0$292
                                   1220 ;src/main.c:226: player_dir=north;
      00048D 21r6Er00         [12] 1221 	ld	hl, #_player_dir
      000490 36 00            [12] 1222 	ld	(hl), #0x00
      000492                       1223 00107$:
                           000492  1224 	C$main.c$228$2_0$291	= .
                                   1225 	.globl	C$main.c$228$2_0$291
                                   1226 ;src/main.c:228: update_dng(test_dungeon,15,15);
      000492 3E 0F            [ 8] 1227 	ld	a, #0x0f
      000494 F5               [16] 1228 	push	af
      000495 33               [ 8] 1229 	inc	sp
      000496 3E 0F            [ 8] 1230 	ld	a, #0x0f
      000498 11r92r01         [12] 1231 	ld	de, #_test_dungeon
      00049B CDr73r02         [24] 1232 	call	_update_dng
      00049E                       1233 00109$:
                           00049E  1234 	C$main.c$231$1_0$288	= .
                                   1235 	.globl	C$main.c$231$1_0$288
                                   1236 ;src/main.c:231: if((joypad_current & J_UP) && !(joypad_previous & J_UP)){
      00049E FAr6Fr00         [16] 1237 	ld	a, (#_joypad_current)
      0004A1 CB 57            [ 8] 1238 	bit	2, a
      0004A3 CArD8r05         [16] 1239 	jp	Z,00129$
      0004A6 FAr70r00         [16] 1240 	ld	a, (#_joypad_previous)
      0004A9 CB 57            [ 8] 1241 	bit	2, a
      0004AB C2rD8r05         [16] 1242 	jp	NZ,00129$
                           0004AE  1243 	C$main.c$234$1_0$288	= .
                                   1244 	.globl	C$main.c$234$1_0$288
                                   1245 ;src/main.c:234: if(return_value(test_dungeon,15,15,player_x,player_y-1)==0x00||return_value(test_dungeon,15,15,player_x,player_y-1)==0x01){
      0004AE 21r04r00         [12] 1246 	ld	hl, #_player_y
      0004B1 4E               [ 8] 1247 	ld	c, (hl)
                           0004B2  1248 	C$main.c$232$2_0$293	= .
                                   1249 	.globl	C$main.c$232$2_0$293
                                   1250 ;src/main.c:232: switch(player_dir){
      0004B2 FAr6Er00         [16] 1251 	ld	a, (#_player_dir)
      0004B5 B7               [ 4] 1252 	or	a, a
      0004B6 28 1A            [12] 1253 	jr	Z, 00111$
                           0004B8  1254 	C$main.c$240$1_0$288	= .
                                   1255 	.globl	C$main.c$240$1_0$288
                                   1256 ;src/main.c:240: if(return_value(test_dungeon,15,15,player_x+1,player_y)==0x00||return_value(test_dungeon,15,15,player_x+1,player_y)==0x01){
      0004B8 21r03r00         [12] 1257 	ld	hl, #_player_x
      0004BB 5E               [ 8] 1258 	ld	e, (hl)
                           0004BC  1259 	C$main.c$232$2_0$293	= .
                                   1260 	.globl	C$main.c$232$2_0$293
                                   1261 ;src/main.c:232: switch(player_dir){
      0004BC FAr6Er00         [16] 1262 	ld	a, (#_player_dir)
      0004BF 3D               [ 4] 1263 	dec	a
      0004C0 28 52            [12] 1264 	jr	Z, 00115$
      0004C2 FAr6Er00         [16] 1265 	ld	a,(#_player_dir)
      0004C5 FE 02            [ 8] 1266 	cp	a,#0x02
      0004C7 CAr56r05         [16] 1267 	jp	Z,00119$
      0004CA D6 03            [ 8] 1268 	sub	a, #0x03
      0004CC CAr96r05         [16] 1269 	jp	Z,00123$
      0004CF C3rD4r05         [16] 1270 	jp	00127$
                           0004D2  1271 	C$main.c$233$3_0$294	= .
                                   1272 	.globl	C$main.c$233$3_0$294
                                   1273 ;src/main.c:233: case north:
      0004D2                       1274 00111$:
                           0004D2  1275 	C$main.c$234$3_0$294	= .
                                   1276 	.globl	C$main.c$234$3_0$294
                                   1277 ;src/main.c:234: if(return_value(test_dungeon,15,15,player_x,player_y-1)==0x00||return_value(test_dungeon,15,15,player_x,player_y-1)==0x01){
      0004D2 0D               [ 4] 1278 	dec	c
      0004D3 79               [ 4] 1279 	ld	a, c
      0004D4 F5               [16] 1280 	push	af
      0004D5 33               [ 8] 1281 	inc	sp
      0004D6 FAr03r00         [16] 1282 	ld	a, (#_player_x)
      0004D9 67               [ 4] 1283 	ld	h, a
      0004DA 2E 0F            [ 8] 1284 	ld	l, #0x0f
      0004DC E5               [16] 1285 	push	hl
      0004DD 3E 0F            [ 8] 1286 	ld	a, #0x0f
      0004DF 11r92r01         [12] 1287 	ld	de, #_test_dungeon
      0004E2 CDr00r00         [24] 1288 	call	_return_value
      0004E5 B7               [ 4] 1289 	or	a, a
      0004E6 28 19            [12] 1290 	jr	Z, 00112$
      0004E8 FAr04r00         [16] 1291 	ld	a, (#_player_y)
      0004EB 3D               [ 4] 1292 	dec	a
      0004EC F5               [16] 1293 	push	af
      0004ED 33               [ 8] 1294 	inc	sp
      0004EE FAr03r00         [16] 1295 	ld	a, (#_player_x)
      0004F1 67               [ 4] 1296 	ld	h, a
      0004F2 2E 0F            [ 8] 1297 	ld	l, #0x0f
      0004F4 E5               [16] 1298 	push	hl
      0004F5 3E 0F            [ 8] 1299 	ld	a, #0x0f
      0004F7 11r92r01         [12] 1300 	ld	de, #_test_dungeon
      0004FA CDr00r00         [24] 1301 	call	_return_value
      0004FD 3D               [ 4] 1302 	dec	a
      0004FE C2rD4r05         [16] 1303 	jp	NZ,00127$
      000501                       1304 00112$:
                           000501  1305 	C$main.c$235$4_0$295	= .
                                   1306 	.globl	C$main.c$235$4_0$295
                                   1307 ;src/main.c:235: player_y--;
      000501 21r04r00         [12] 1308 	ld	hl, #_player_y
      000504 35               [12] 1309 	dec	(hl)
                           000505  1310 	C$main.c$236$4_0$295	= .
                                   1311 	.globl	C$main.c$236$4_0$295
                                   1312 ;src/main.c:236: update_dng(test_dungeon,15,15);
      000505 3E 0F            [ 8] 1313 	ld	a, #0x0f
      000507 F5               [16] 1314 	push	af
      000508 33               [ 8] 1315 	inc	sp
      000509 3E 0F            [ 8] 1316 	ld	a, #0x0f
      00050B 11r92r01         [12] 1317 	ld	de, #_test_dungeon
      00050E CDr73r02         [24] 1318 	call	_update_dng
                           000511  1319 	C$main.c$238$3_0$294	= .
                                   1320 	.globl	C$main.c$238$3_0$294
                                   1321 ;src/main.c:238: break;
      000511 C3rD4r05         [16] 1322 	jp	00127$
                           000514  1323 	C$main.c$239$3_0$294	= .
                                   1324 	.globl	C$main.c$239$3_0$294
                                   1325 ;src/main.c:239: case east:
      000514                       1326 00115$:
                           000514  1327 	C$main.c$240$3_0$294	= .
                                   1328 	.globl	C$main.c$240$3_0$294
                                   1329 ;src/main.c:240: if(return_value(test_dungeon,15,15,player_x+1,player_y)==0x00||return_value(test_dungeon,15,15,player_x+1,player_y)==0x01){
      000514 43               [ 4] 1330 	ld	b, e
      000515 04               [ 4] 1331 	inc	b
      000516 FAr04r00         [16] 1332 	ld	a, (#_player_y)
      000519 F5               [16] 1333 	push	af
      00051A 33               [ 8] 1334 	inc	sp
      00051B 0E 0F            [ 8] 1335 	ld	c, #0x0f
      00051D C5               [16] 1336 	push	bc
      00051E 3E 0F            [ 8] 1337 	ld	a, #0x0f
      000520 11r92r01         [12] 1338 	ld	de, #_test_dungeon
      000523 CDr00r00         [24] 1339 	call	_return_value
      000526 B7               [ 4] 1340 	or	a, a
      000527 28 1A            [12] 1341 	jr	Z, 00116$
      000529 FAr03r00         [16] 1342 	ld	a, (#_player_x)
      00052C 3C               [ 4] 1343 	inc	a
      00052D 21r04r00         [12] 1344 	ld	hl, #_player_y
      000530 66               [ 8] 1345 	ld	h, (hl)
                                   1346 ;	spillPairReg hl
                                   1347 ;	spillPairReg hl
      000531 E5               [16] 1348 	push	hl
      000532 33               [ 8] 1349 	inc	sp
      000533 67               [ 4] 1350 	ld	h, a
      000534 2E 0F            [ 8] 1351 	ld	l, #0x0f
      000536 E5               [16] 1352 	push	hl
      000537 3E 0F            [ 8] 1353 	ld	a, #0x0f
      000539 11r92r01         [12] 1354 	ld	de, #_test_dungeon
      00053C CDr00r00         [24] 1355 	call	_return_value
      00053F 3D               [ 4] 1356 	dec	a
      000540 C2rD4r05         [16] 1357 	jp	NZ,00127$
      000543                       1358 00116$:
                           000543  1359 	C$main.c$241$4_0$296	= .
                                   1360 	.globl	C$main.c$241$4_0$296
                                   1361 ;src/main.c:241: player_x++;
      000543 21r03r00         [12] 1362 	ld	hl, #_player_x
      000546 34               [12] 1363 	inc	(hl)
                           000547  1364 	C$main.c$242$4_0$296	= .
                                   1365 	.globl	C$main.c$242$4_0$296
                                   1366 ;src/main.c:242: update_dng(test_dungeon,15,15);
      000547 3E 0F            [ 8] 1367 	ld	a, #0x0f
      000549 F5               [16] 1368 	push	af
      00054A 33               [ 8] 1369 	inc	sp
      00054B 3E 0F            [ 8] 1370 	ld	a, #0x0f
      00054D 11r92r01         [12] 1371 	ld	de, #_test_dungeon
      000550 CDr73r02         [24] 1372 	call	_update_dng
                           000553  1373 	C$main.c$244$3_0$294	= .
                                   1374 	.globl	C$main.c$244$3_0$294
                                   1375 ;src/main.c:244: break;
      000553 C3rD4r05         [16] 1376 	jp	00127$
                           000556  1377 	C$main.c$245$3_0$294	= .
                                   1378 	.globl	C$main.c$245$3_0$294
                                   1379 ;src/main.c:245: case south:
      000556                       1380 00119$:
                           000556  1381 	C$main.c$246$3_0$294	= .
                                   1382 	.globl	C$main.c$246$3_0$294
                                   1383 ;src/main.c:246: if(return_value(test_dungeon,15,15,player_x,player_y+1)==0x00||return_value(test_dungeon,15,15,player_x,player_y+1)==0x01){
      000556 0C               [ 4] 1384 	inc	c
      000557 79               [ 4] 1385 	ld	a, c
      000558 F5               [16] 1386 	push	af
      000559 33               [ 8] 1387 	inc	sp
      00055A FAr03r00         [16] 1388 	ld	a, (#_player_x)
      00055D 67               [ 4] 1389 	ld	h, a
      00055E 2E 0F            [ 8] 1390 	ld	l, #0x0f
      000560 E5               [16] 1391 	push	hl
      000561 3E 0F            [ 8] 1392 	ld	a, #0x0f
      000563 11r92r01         [12] 1393 	ld	de, #_test_dungeon
      000566 CDr00r00         [24] 1394 	call	_return_value
      000569 B7               [ 4] 1395 	or	a, a
      00056A 28 18            [12] 1396 	jr	Z, 00120$
      00056C FAr04r00         [16] 1397 	ld	a, (#_player_y)
      00056F 3C               [ 4] 1398 	inc	a
      000570 F5               [16] 1399 	push	af
      000571 33               [ 8] 1400 	inc	sp
      000572 FAr03r00         [16] 1401 	ld	a, (#_player_x)
      000575 67               [ 4] 1402 	ld	h, a
      000576 2E 0F            [ 8] 1403 	ld	l, #0x0f
      000578 E5               [16] 1404 	push	hl
      000579 3E 0F            [ 8] 1405 	ld	a, #0x0f
      00057B 11r92r01         [12] 1406 	ld	de, #_test_dungeon
      00057E CDr00r00         [24] 1407 	call	_return_value
      000581 3D               [ 4] 1408 	dec	a
      000582 20 50            [12] 1409 	jr	NZ, 00127$
      000584                       1410 00120$:
                           000584  1411 	C$main.c$247$4_0$297	= .
                                   1412 	.globl	C$main.c$247$4_0$297
                                   1413 ;src/main.c:247: player_y++;
      000584 21r04r00         [12] 1414 	ld	hl, #_player_y
      000587 34               [12] 1415 	inc	(hl)
                           000588  1416 	C$main.c$248$4_0$297	= .
                                   1417 	.globl	C$main.c$248$4_0$297
                                   1418 ;src/main.c:248: update_dng(test_dungeon,15,15);
      000588 3E 0F            [ 8] 1419 	ld	a, #0x0f
      00058A F5               [16] 1420 	push	af
      00058B 33               [ 8] 1421 	inc	sp
      00058C 3E 0F            [ 8] 1422 	ld	a, #0x0f
      00058E 11r92r01         [12] 1423 	ld	de, #_test_dungeon
      000591 CDr73r02         [24] 1424 	call	_update_dng
                           000594  1425 	C$main.c$250$3_0$294	= .
                                   1426 	.globl	C$main.c$250$3_0$294
                                   1427 ;src/main.c:250: break;
      000594 18 3E            [12] 1428 	jr	00127$
                           000596  1429 	C$main.c$251$3_0$294	= .
                                   1430 	.globl	C$main.c$251$3_0$294
                                   1431 ;src/main.c:251: case west:
      000596                       1432 00123$:
                           000596  1433 	C$main.c$252$3_0$294	= .
                                   1434 	.globl	C$main.c$252$3_0$294
                                   1435 ;src/main.c:252: if(return_value(test_dungeon,15,15,player_x-1,player_y)==0x00||return_value(test_dungeon,15,15,player_x-1,player_y)==0x01){
      000596 43               [ 4] 1436 	ld	b, e
      000597 05               [ 4] 1437 	dec	b
      000598 FAr04r00         [16] 1438 	ld	a, (#_player_y)
      00059B F5               [16] 1439 	push	af
      00059C 33               [ 8] 1440 	inc	sp
      00059D 0E 0F            [ 8] 1441 	ld	c, #0x0f
      00059F C5               [16] 1442 	push	bc
      0005A0 3E 0F            [ 8] 1443 	ld	a, #0x0f
      0005A2 11r92r01         [12] 1444 	ld	de, #_test_dungeon
      0005A5 CDr00r00         [24] 1445 	call	_return_value
      0005A8 B7               [ 4] 1446 	or	a, a
      0005A9 28 19            [12] 1447 	jr	Z, 00124$
      0005AB FAr03r00         [16] 1448 	ld	a, (#_player_x)
      0005AE 3D               [ 4] 1449 	dec	a
      0005AF 21r04r00         [12] 1450 	ld	hl, #_player_y
      0005B2 66               [ 8] 1451 	ld	h, (hl)
                                   1452 ;	spillPairReg hl
                                   1453 ;	spillPairReg hl
      0005B3 E5               [16] 1454 	push	hl
      0005B4 33               [ 8] 1455 	inc	sp
      0005B5 67               [ 4] 1456 	ld	h, a
      0005B6 2E 0F            [ 8] 1457 	ld	l, #0x0f
      0005B8 E5               [16] 1458 	push	hl
      0005B9 3E 0F            [ 8] 1459 	ld	a, #0x0f
      0005BB 11r92r01         [12] 1460 	ld	de, #_test_dungeon
      0005BE CDr00r00         [24] 1461 	call	_return_value
      0005C1 3D               [ 4] 1462 	dec	a
      0005C2 20 10            [12] 1463 	jr	NZ, 00127$
      0005C4                       1464 00124$:
                           0005C4  1465 	C$main.c$253$4_0$298	= .
                                   1466 	.globl	C$main.c$253$4_0$298
                                   1467 ;src/main.c:253: player_x--;
      0005C4 21r03r00         [12] 1468 	ld	hl, #_player_x
      0005C7 35               [12] 1469 	dec	(hl)
                           0005C8  1470 	C$main.c$254$4_0$298	= .
                                   1471 	.globl	C$main.c$254$4_0$298
                                   1472 ;src/main.c:254: update_dng(test_dungeon,15,15);
      0005C8 3E 0F            [ 8] 1473 	ld	a, #0x0f
      0005CA F5               [16] 1474 	push	af
      0005CB 33               [ 8] 1475 	inc	sp
      0005CC 3E 0F            [ 8] 1476 	ld	a, #0x0f
      0005CE 11r92r01         [12] 1477 	ld	de, #_test_dungeon
      0005D1 CDr73r02         [24] 1478 	call	_update_dng
                           0005D4  1479 	C$main.c$257$2_0$293	= .
                                   1480 	.globl	C$main.c$257$2_0$293
                                   1481 ;src/main.c:257: }
      0005D4                       1482 00127$:
                           0005D4  1483 	C$main.c$258$2_0$293	= .
                                   1484 	.globl	C$main.c$258$2_0$293
                                   1485 ;src/main.c:258: encounter_timer++;
      0005D4 21r02r00         [12] 1486 	ld	hl, #_encounter_timer
      0005D7 34               [12] 1487 	inc	(hl)
      0005D8                       1488 00129$:
                           0005D8  1489 	C$main.c$260$1_0$288	= .
                                   1490 	.globl	C$main.c$260$1_0$288
                                   1491 ;src/main.c:260: if((joypad_current & J_DOWN) && !(joypad_previous & J_DOWN)){
      0005D8 FAr6Fr00         [16] 1492 	ld	a, (#_joypad_current)
      0005DB CB 5F            [ 8] 1493 	bit	3, a
      0005DD CAr12r07         [16] 1494 	jp	Z,00149$
      0005E0 FAr70r00         [16] 1495 	ld	a, (#_joypad_previous)
      0005E3 CB 5F            [ 8] 1496 	bit	3, a
      0005E5 C2r12r07         [16] 1497 	jp	NZ,00149$
                           0005E8  1498 	C$main.c$234$1_0$288	= .
                                   1499 	.globl	C$main.c$234$1_0$288
                                   1500 ;src/main.c:234: if(return_value(test_dungeon,15,15,player_x,player_y-1)==0x00||return_value(test_dungeon,15,15,player_x,player_y-1)==0x01){
      0005E8 21r04r00         [12] 1501 	ld	hl, #_player_y
      0005EB 4E               [ 8] 1502 	ld	c, (hl)
                           0005EC  1503 	C$main.c$261$2_0$299	= .
                                   1504 	.globl	C$main.c$261$2_0$299
                                   1505 ;src/main.c:261: switch(player_dir){
      0005EC FAr6Er00         [16] 1506 	ld	a, (#_player_dir)
      0005EF B7               [ 4] 1507 	or	a, a
      0005F0 28 1A            [12] 1508 	jr	Z, 00131$
                           0005F2  1509 	C$main.c$240$1_0$288	= .
                                   1510 	.globl	C$main.c$240$1_0$288
                                   1511 ;src/main.c:240: if(return_value(test_dungeon,15,15,player_x+1,player_y)==0x00||return_value(test_dungeon,15,15,player_x+1,player_y)==0x01){
      0005F2 21r03r00         [12] 1512 	ld	hl, #_player_x
      0005F5 5E               [ 8] 1513 	ld	e, (hl)
                           0005F6  1514 	C$main.c$261$2_0$299	= .
                                   1515 	.globl	C$main.c$261$2_0$299
                                   1516 ;src/main.c:261: switch(player_dir){
      0005F6 FAr6Er00         [16] 1517 	ld	a, (#_player_dir)
      0005F9 3D               [ 4] 1518 	dec	a
      0005FA 28 52            [12] 1519 	jr	Z, 00135$
      0005FC FAr6Er00         [16] 1520 	ld	a,(#_player_dir)
      0005FF FE 02            [ 8] 1521 	cp	a,#0x02
      000601 CAr90r06         [16] 1522 	jp	Z,00139$
      000604 D6 03            [ 8] 1523 	sub	a, #0x03
      000606 CArD0r06         [16] 1524 	jp	Z,00143$
      000609 C3r0Er07         [16] 1525 	jp	00147$
                           00060C  1526 	C$main.c$262$3_0$300	= .
                                   1527 	.globl	C$main.c$262$3_0$300
                                   1528 ;src/main.c:262: case north:
      00060C                       1529 00131$:
                           00060C  1530 	C$main.c$263$3_0$300	= .
                                   1531 	.globl	C$main.c$263$3_0$300
                                   1532 ;src/main.c:263: if(return_value(test_dungeon,15,15,player_x,player_y+1)==0x00||return_value(test_dungeon,15,15,player_x,player_y+1)==0x01){
      00060C 0C               [ 4] 1533 	inc	c
      00060D 79               [ 4] 1534 	ld	a, c
      00060E F5               [16] 1535 	push	af
      00060F 33               [ 8] 1536 	inc	sp
      000610 FAr03r00         [16] 1537 	ld	a, (#_player_x)
      000613 67               [ 4] 1538 	ld	h, a
      000614 2E 0F            [ 8] 1539 	ld	l, #0x0f
      000616 E5               [16] 1540 	push	hl
      000617 3E 0F            [ 8] 1541 	ld	a, #0x0f
      000619 11r92r01         [12] 1542 	ld	de, #_test_dungeon
      00061C CDr00r00         [24] 1543 	call	_return_value
      00061F B7               [ 4] 1544 	or	a, a
      000620 28 19            [12] 1545 	jr	Z, 00132$
      000622 FAr04r00         [16] 1546 	ld	a, (#_player_y)
      000625 3C               [ 4] 1547 	inc	a
      000626 F5               [16] 1548 	push	af
      000627 33               [ 8] 1549 	inc	sp
      000628 FAr03r00         [16] 1550 	ld	a, (#_player_x)
      00062B 67               [ 4] 1551 	ld	h, a
      00062C 2E 0F            [ 8] 1552 	ld	l, #0x0f
      00062E E5               [16] 1553 	push	hl
      00062F 3E 0F            [ 8] 1554 	ld	a, #0x0f
      000631 11r92r01         [12] 1555 	ld	de, #_test_dungeon
      000634 CDr00r00         [24] 1556 	call	_return_value
      000637 3D               [ 4] 1557 	dec	a
      000638 C2r0Er07         [16] 1558 	jp	NZ,00147$
      00063B                       1559 00132$:
                           00063B  1560 	C$main.c$264$4_0$301	= .
                                   1561 	.globl	C$main.c$264$4_0$301
                                   1562 ;src/main.c:264: player_y++;
      00063B 21r04r00         [12] 1563 	ld	hl, #_player_y
      00063E 34               [12] 1564 	inc	(hl)
                           00063F  1565 	C$main.c$265$4_0$301	= .
                                   1566 	.globl	C$main.c$265$4_0$301
                                   1567 ;src/main.c:265: update_dng(test_dungeon,15,15);
      00063F 3E 0F            [ 8] 1568 	ld	a, #0x0f
      000641 F5               [16] 1569 	push	af
      000642 33               [ 8] 1570 	inc	sp
      000643 3E 0F            [ 8] 1571 	ld	a, #0x0f
      000645 11r92r01         [12] 1572 	ld	de, #_test_dungeon
      000648 CDr73r02         [24] 1573 	call	_update_dng
                           00064B  1574 	C$main.c$267$3_0$300	= .
                                   1575 	.globl	C$main.c$267$3_0$300
                                   1576 ;src/main.c:267: break;
      00064B C3r0Er07         [16] 1577 	jp	00147$
                           00064E  1578 	C$main.c$268$3_0$300	= .
                                   1579 	.globl	C$main.c$268$3_0$300
                                   1580 ;src/main.c:268: case east:
      00064E                       1581 00135$:
                           00064E  1582 	C$main.c$269$3_0$300	= .
                                   1583 	.globl	C$main.c$269$3_0$300
                                   1584 ;src/main.c:269: if(return_value(test_dungeon,15,15,player_x-1,player_y)==0x00||return_value(test_dungeon,15,15,player_x-1,player_y)==0x01){
      00064E 43               [ 4] 1585 	ld	b, e
      00064F 05               [ 4] 1586 	dec	b
      000650 FAr04r00         [16] 1587 	ld	a, (#_player_y)
      000653 F5               [16] 1588 	push	af
      000654 33               [ 8] 1589 	inc	sp
      000655 0E 0F            [ 8] 1590 	ld	c, #0x0f
      000657 C5               [16] 1591 	push	bc
      000658 3E 0F            [ 8] 1592 	ld	a, #0x0f
      00065A 11r92r01         [12] 1593 	ld	de, #_test_dungeon
      00065D CDr00r00         [24] 1594 	call	_return_value
      000660 B7               [ 4] 1595 	or	a, a
      000661 28 1A            [12] 1596 	jr	Z, 00136$
      000663 FAr03r00         [16] 1597 	ld	a, (#_player_x)
      000666 3D               [ 4] 1598 	dec	a
      000667 21r04r00         [12] 1599 	ld	hl, #_player_y
      00066A 66               [ 8] 1600 	ld	h, (hl)
                                   1601 ;	spillPairReg hl
                                   1602 ;	spillPairReg hl
      00066B E5               [16] 1603 	push	hl
      00066C 33               [ 8] 1604 	inc	sp
      00066D 67               [ 4] 1605 	ld	h, a
      00066E 2E 0F            [ 8] 1606 	ld	l, #0x0f
      000670 E5               [16] 1607 	push	hl
      000671 3E 0F            [ 8] 1608 	ld	a, #0x0f
      000673 11r92r01         [12] 1609 	ld	de, #_test_dungeon
      000676 CDr00r00         [24] 1610 	call	_return_value
      000679 3D               [ 4] 1611 	dec	a
      00067A C2r0Er07         [16] 1612 	jp	NZ,00147$
      00067D                       1613 00136$:
                           00067D  1614 	C$main.c$270$4_0$302	= .
                                   1615 	.globl	C$main.c$270$4_0$302
                                   1616 ;src/main.c:270: player_x--;
      00067D 21r03r00         [12] 1617 	ld	hl, #_player_x
      000680 35               [12] 1618 	dec	(hl)
                           000681  1619 	C$main.c$271$4_0$302	= .
                                   1620 	.globl	C$main.c$271$4_0$302
                                   1621 ;src/main.c:271: update_dng(test_dungeon,15,15);
      000681 3E 0F            [ 8] 1622 	ld	a, #0x0f
      000683 F5               [16] 1623 	push	af
      000684 33               [ 8] 1624 	inc	sp
      000685 3E 0F            [ 8] 1625 	ld	a, #0x0f
      000687 11r92r01         [12] 1626 	ld	de, #_test_dungeon
      00068A CDr73r02         [24] 1627 	call	_update_dng
                           00068D  1628 	C$main.c$273$3_0$300	= .
                                   1629 	.globl	C$main.c$273$3_0$300
                                   1630 ;src/main.c:273: break;
      00068D C3r0Er07         [16] 1631 	jp	00147$
                           000690  1632 	C$main.c$274$3_0$300	= .
                                   1633 	.globl	C$main.c$274$3_0$300
                                   1634 ;src/main.c:274: case south:
      000690                       1635 00139$:
                           000690  1636 	C$main.c$275$3_0$300	= .
                                   1637 	.globl	C$main.c$275$3_0$300
                                   1638 ;src/main.c:275: if(return_value(test_dungeon,15,15,player_x,player_y-1)==0x00||return_value(test_dungeon,15,15,player_x,player_y-1)==0x01){
      000690 0D               [ 4] 1639 	dec	c
      000691 79               [ 4] 1640 	ld	a, c
      000692 F5               [16] 1641 	push	af
      000693 33               [ 8] 1642 	inc	sp
      000694 FAr03r00         [16] 1643 	ld	a, (#_player_x)
      000697 67               [ 4] 1644 	ld	h, a
      000698 2E 0F            [ 8] 1645 	ld	l, #0x0f
      00069A E5               [16] 1646 	push	hl
      00069B 3E 0F            [ 8] 1647 	ld	a, #0x0f
      00069D 11r92r01         [12] 1648 	ld	de, #_test_dungeon
      0006A0 CDr00r00         [24] 1649 	call	_return_value
      0006A3 B7               [ 4] 1650 	or	a, a
      0006A4 28 18            [12] 1651 	jr	Z, 00140$
      0006A6 FAr04r00         [16] 1652 	ld	a, (#_player_y)
      0006A9 3D               [ 4] 1653 	dec	a
      0006AA F5               [16] 1654 	push	af
      0006AB 33               [ 8] 1655 	inc	sp
      0006AC FAr03r00         [16] 1656 	ld	a, (#_player_x)
      0006AF 67               [ 4] 1657 	ld	h, a
      0006B0 2E 0F            [ 8] 1658 	ld	l, #0x0f
      0006B2 E5               [16] 1659 	push	hl
      0006B3 3E 0F            [ 8] 1660 	ld	a, #0x0f
      0006B5 11r92r01         [12] 1661 	ld	de, #_test_dungeon
      0006B8 CDr00r00         [24] 1662 	call	_return_value
      0006BB 3D               [ 4] 1663 	dec	a
      0006BC 20 50            [12] 1664 	jr	NZ, 00147$
      0006BE                       1665 00140$:
                           0006BE  1666 	C$main.c$276$4_0$303	= .
                                   1667 	.globl	C$main.c$276$4_0$303
                                   1668 ;src/main.c:276: player_y--;
      0006BE 21r04r00         [12] 1669 	ld	hl, #_player_y
      0006C1 35               [12] 1670 	dec	(hl)
                           0006C2  1671 	C$main.c$277$4_0$303	= .
                                   1672 	.globl	C$main.c$277$4_0$303
                                   1673 ;src/main.c:277: update_dng(test_dungeon,15,15);
      0006C2 3E 0F            [ 8] 1674 	ld	a, #0x0f
      0006C4 F5               [16] 1675 	push	af
      0006C5 33               [ 8] 1676 	inc	sp
      0006C6 3E 0F            [ 8] 1677 	ld	a, #0x0f
      0006C8 11r92r01         [12] 1678 	ld	de, #_test_dungeon
      0006CB CDr73r02         [24] 1679 	call	_update_dng
                           0006CE  1680 	C$main.c$279$3_0$300	= .
                                   1681 	.globl	C$main.c$279$3_0$300
                                   1682 ;src/main.c:279: break;
      0006CE 18 3E            [12] 1683 	jr	00147$
                           0006D0  1684 	C$main.c$280$3_0$300	= .
                                   1685 	.globl	C$main.c$280$3_0$300
                                   1686 ;src/main.c:280: case west:
      0006D0                       1687 00143$:
                           0006D0  1688 	C$main.c$281$3_0$300	= .
                                   1689 	.globl	C$main.c$281$3_0$300
                                   1690 ;src/main.c:281: if(return_value(test_dungeon,15,15,player_x+1,player_y)==0x00||return_value(test_dungeon,15,15,player_x+1,player_y)==0x01){
      0006D0 43               [ 4] 1691 	ld	b, e
      0006D1 04               [ 4] 1692 	inc	b
      0006D2 FAr04r00         [16] 1693 	ld	a, (#_player_y)
      0006D5 F5               [16] 1694 	push	af
      0006D6 33               [ 8] 1695 	inc	sp
      0006D7 0E 0F            [ 8] 1696 	ld	c, #0x0f
      0006D9 C5               [16] 1697 	push	bc
      0006DA 3E 0F            [ 8] 1698 	ld	a, #0x0f
      0006DC 11r92r01         [12] 1699 	ld	de, #_test_dungeon
      0006DF CDr00r00         [24] 1700 	call	_return_value
      0006E2 B7               [ 4] 1701 	or	a, a
      0006E3 28 19            [12] 1702 	jr	Z, 00144$
      0006E5 FAr03r00         [16] 1703 	ld	a, (#_player_x)
      0006E8 3C               [ 4] 1704 	inc	a
      0006E9 21r04r00         [12] 1705 	ld	hl, #_player_y
      0006EC 66               [ 8] 1706 	ld	h, (hl)
                                   1707 ;	spillPairReg hl
                                   1708 ;	spillPairReg hl
      0006ED E5               [16] 1709 	push	hl
      0006EE 33               [ 8] 1710 	inc	sp
      0006EF 67               [ 4] 1711 	ld	h, a
      0006F0 2E 0F            [ 8] 1712 	ld	l, #0x0f
      0006F2 E5               [16] 1713 	push	hl
      0006F3 3E 0F            [ 8] 1714 	ld	a, #0x0f
      0006F5 11r92r01         [12] 1715 	ld	de, #_test_dungeon
      0006F8 CDr00r00         [24] 1716 	call	_return_value
      0006FB 3D               [ 4] 1717 	dec	a
      0006FC 20 10            [12] 1718 	jr	NZ, 00147$
      0006FE                       1719 00144$:
                           0006FE  1720 	C$main.c$282$4_0$304	= .
                                   1721 	.globl	C$main.c$282$4_0$304
                                   1722 ;src/main.c:282: player_x++;
      0006FE 21r03r00         [12] 1723 	ld	hl, #_player_x
      000701 34               [12] 1724 	inc	(hl)
                           000702  1725 	C$main.c$283$4_0$304	= .
                                   1726 	.globl	C$main.c$283$4_0$304
                                   1727 ;src/main.c:283: update_dng(test_dungeon,15,15);
      000702 3E 0F            [ 8] 1728 	ld	a, #0x0f
      000704 F5               [16] 1729 	push	af
      000705 33               [ 8] 1730 	inc	sp
      000706 3E 0F            [ 8] 1731 	ld	a, #0x0f
      000708 11r92r01         [12] 1732 	ld	de, #_test_dungeon
      00070B CDr73r02         [24] 1733 	call	_update_dng
                           00070E  1734 	C$main.c$286$2_0$299	= .
                                   1735 	.globl	C$main.c$286$2_0$299
                                   1736 ;src/main.c:286: }
      00070E                       1737 00147$:
                           00070E  1738 	C$main.c$287$2_0$299	= .
                                   1739 	.globl	C$main.c$287$2_0$299
                                   1740 ;src/main.c:287: encounter_timer++;
      00070E 21r02r00         [12] 1741 	ld	hl, #_encounter_timer
      000711 34               [12] 1742 	inc	(hl)
      000712                       1743 00149$:
                           000712  1744 	C$main.c$289$1_0$288	= .
                                   1745 	.globl	C$main.c$289$1_0$288
                                   1746 ;src/main.c:289: if(encounter_counter==encounter_timer){
      000712 FAr01r00         [16] 1747 	ld	a, (#_encounter_counter)
      000715 21r02r00         [12] 1748 	ld	hl, #_encounter_timer
      000718 96               [ 8] 1749 	sub	a, (hl)
      000719 C0               [20] 1750 	ret	NZ
                           00071A  1751 	C$main.c$290$2_0$305	= .
                                   1752 	.globl	C$main.c$290$2_0$305
                                   1753 ;src/main.c:290: global_state = 2;
      00071A 21r00r00         [12] 1754 	ld	hl, #_global_state
      00071D 36 02            [12] 1755 	ld	(hl), #0x02
                           00071F  1756 	C$main.c$292$1_0$288	= .
                                   1757 	.globl	C$main.c$292$1_0$288
                                   1758 ;src/main.c:292: }
                           00071F  1759 	C$main.c$292$1_0$288	= .
                                   1760 	.globl	C$main.c$292$1_0$288
                           00071F  1761 	XG$dungeon_logic_upd$0$0	= .
                                   1762 	.globl	XG$dungeon_logic_upd$0$0
      00071F C9               [16] 1763 	ret
                           000720  1764 	G$state_switcher$0$0	= .
                                   1765 	.globl	G$state_switcher$0$0
                           000720  1766 	C$main.c$294$1_0$307	= .
                                   1767 	.globl	C$main.c$294$1_0$307
                                   1768 ;src/main.c:294: void state_switcher(uint8_t t){
                                   1769 ;	---------------------------------
                                   1770 ; Function state_switcher
                                   1771 ; ---------------------------------
      000720                       1772 _state_switcher::
      000720 4F               [ 4] 1773 	ld	c, a
                           000721  1774 	C$main.c$295$1_0$307	= .
                                   1775 	.globl	C$main.c$295$1_0$307
                                   1776 ;src/main.c:295: switch(t){
      000721 3E 05            [ 8] 1777 	ld	a, #0x05
      000723 91               [ 4] 1778 	sub	a, c
      000724 D8               [20] 1779 	ret	C
      000725 06 00            [ 8] 1780 	ld	b, #0x00
      000727 21r2Er07         [12] 1781 	ld	hl, #00115$
      00072A 09               [ 8] 1782 	add	hl, bc
      00072B 09               [ 8] 1783 	add	hl, bc
      00072C 09               [ 8] 1784 	add	hl, bc
      00072D E9               [ 4] 1785 	jp	(hl)
      00072E                       1786 00115$:
                           00072E  1787 	C$main.c$324$1_0$307	= .
                                   1788 	.globl	C$main.c$324$1_0$307
                                   1789 ;src/main.c:324: }
                           00072E  1790 	C$main.c$325$1_0$307	= .
                                   1791 	.globl	C$main.c$325$1_0$307
                                   1792 ;src/main.c:325: }
                           00072E  1793 	C$main.c$325$1_0$307	= .
                                   1794 	.globl	C$main.c$325$1_0$307
                           00072E  1795 	XG$state_switcher$0$0	= .
                                   1796 	.globl	XG$state_switcher$0$0
      00072E C9               [16] 1797 	ret
                           00072F  1798 	G$main$0$0	= .
                                   1799 	.globl	G$main$0$0
                           00072F  1800 	C$main.c$327$1_0$310	= .
                                   1801 	.globl	C$main.c$327$1_0$310
                                   1802 ;src/main.c:327: void main(void)
                                   1803 ;	---------------------------------
                                   1804 ; Function main
                                   1805 ; ---------------------------------
      00072F                       1806 _main::
                           00072F  1807 	C$main.c$329$1_0$310	= .
                                   1808 	.globl	C$main.c$329$1_0$310
                                   1809 ;src/main.c:329: init_dungeon(test_dungeon, 15, 15);
      00072F 3E 0F            [ 8] 1810 	ld	a, #0x0f
      000731 F5               [16] 1811 	push	af
      000732 33               [ 8] 1812 	inc	sp
      000733 3E 0F            [ 8] 1813 	ld	a, #0x0f
      000735 11r92r01         [12] 1814 	ld	de, #_test_dungeon
      000738 CDr00r00         [24] 1815 	call	_init_dungeon
                           00073B  1816 	C$main.c$331$1_0$310	= .
                                   1817 	.globl	C$main.c$331$1_0$310
                                   1818 ;src/main.c:331: update_dng(test_dungeon,15,15);
      00073B 3E 0F            [ 8] 1819 	ld	a, #0x0f
      00073D F5               [16] 1820 	push	af
      00073E 33               [ 8] 1821 	inc	sp
      00073F 3E 0F            [ 8] 1822 	ld	a, #0x0f
      000741 11r92r01         [12] 1823 	ld	de, #_test_dungeon
      000744 CDr73r02         [24] 1824 	call	_update_dng
                           000747  1825 	C$main.c$333$1_0$310	= .
                                   1826 	.globl	C$main.c$333$1_0$310
                                   1827 ;src/main.c:333: load_enemy(0,0);
      000747 AF               [ 4] 1828 	xor	a, a
      000748 5F               [ 4] 1829 	ld	e, a
      000749 CDr00r00         [24] 1830 	call	_load_enemy
                           00074C  1831 	C$main.c$334$1_0$310	= .
                                   1832 	.globl	C$main.c$334$1_0$310
                                   1833 ;src/main.c:334: load_enemy(1,1);
      00074C 3E 01            [ 8] 1834 	ld	a,#0x01
      00074E 5F               [ 4] 1835 	ld	e,a
      00074F CDr00r00         [24] 1836 	call	_load_enemy
                           000752  1837 	C$main.c$335$1_0$310	= .
                                   1838 	.globl	C$main.c$335$1_0$310
                                   1839 ;src/main.c:335: load_enemy(0,2);
      000752 1E 02            [ 8] 1840 	ld	e, #0x02
      000754 AF               [ 4] 1841 	xor	a, a
      000755 CDr00r00         [24] 1842 	call	_load_enemy
                           000758  1843 	C$main.c$347$1_0$310	= .
                                   1844 	.globl	C$main.c$347$1_0$310
                                   1845 ;src/main.c:347: SHOW_SPRITES;
      000758 F0r00            [12] 1846 	ldh	a, (_LCDC_REG + 0)
      00075A F6 02            [ 8] 1847 	or	a, #0x02
      00075C E0r00            [12] 1848 	ldh	(_LCDC_REG + 0), a
                           00075E  1849 	C$main.c$349$1_0$310	= .
                                   1850 	.globl	C$main.c$349$1_0$310
                                   1851 ;src/main.c:349: while(1) {
      00075E                       1852 00102$:
                           00075E  1853 	C$main.c$352$2_0$311	= .
                                   1854 	.globl	C$main.c$352$2_0$311
                                   1855 ;src/main.c:352: dungeon_logic_upd();
      00075E CDr47r04         [24] 1856 	call	_dungeon_logic_upd
                           000761  1857 	C$main.c$365$2_0$311	= .
                                   1858 	.globl	C$main.c$365$2_0$311
                                   1859 ;src/main.c:365: wait_vbl_done();
      000761 CDr00r00         [24] 1860 	call	_wait_vbl_done
                           000764  1861 	C$main.c$367$1_0$310	= .
                                   1862 	.globl	C$main.c$367$1_0$310
                                   1863 ;src/main.c:367: }
                           000764  1864 	C$main.c$367$1_0$310	= .
                                   1865 	.globl	C$main.c$367$1_0$310
                           000764  1866 	XG$main$0$0	= .
                                   1867 	.globl	XG$main$0$0
      000764 18 F8            [12] 1868 	jr	00102$
                                   1869 	.area _CODE
                                   1870 	.area _INITIALIZER
                           000000  1871 Fmain$__xinit_global_state$0_0$0 == .
      000000                       1872 __xinit__global_state:
      000000 01                    1873 	.db #0x01	; 1
                           000001  1874 Fmain$__xinit_encounter_counter$0_0$0 == .
      000001                       1875 __xinit__encounter_counter:
      000001 00                    1876 	.db #0x00	; 0
                           000002  1877 Fmain$__xinit_encounter_timer$0_0$0 == .
      000002                       1878 __xinit__encounter_timer:
      000002 00                    1879 	.db #0x00	; 0
                           000003  1880 Fmain$__xinit_player_x$0_0$0 == .
      000003                       1881 __xinit__player_x:
      000003 00                    1882 	.db #0x00	; 0
                           000004  1883 Fmain$__xinit_player_y$0_0$0 == .
      000004                       1884 __xinit__player_y:
      000004 00                    1885 	.db #0x00	; 0
                           000005  1886 Fmain$__xinit_p_str$0_0$0 == .
      000005                       1887 __xinit__p_str:
      000005 00                    1888 	.db #0x00	; 0
                           000006  1889 Fmain$__xinit_p_int$0_0$0 == .
      000006                       1890 __xinit__p_int:
      000006 00                    1891 	.db #0x00	; 0
                           000007  1892 Fmain$__xinit_p_agi$0_0$0 == .
      000007                       1893 __xinit__p_agi:
      000007 00                    1894 	.db #0x00	; 0
                           000008  1895 Fmain$__xinit_p_con$0_0$0 == .
      000008                       1896 __xinit__p_con:
      000008 00                    1897 	.db #0x00	; 0
                           000009  1898 Fmain$__xinit_p_luk$0_0$0 == .
      000009                       1899 __xinit__p_luk:
      000009 00                    1900 	.db #0x00	; 0
                           00000A  1901 Fmain$__xinit_inventory$0_0$0 == .
      00000A                       1902 __xinit__inventory:
      00000A 00                    1903 	.db #0x00	; 0
      00000B 00                    1904 	.db 0x00
      00000C 00                    1905 	.db 0x00
      00000D 00                    1906 	.db 0x00
      00000E 00                    1907 	.db 0x00
      00000F 00                    1908 	.db 0x00
      000010 00                    1909 	.db 0x00
      000011 00                    1910 	.db 0x00
      000012 00                    1911 	.db 0x00
      000013 00                    1912 	.db 0x00
      000014 00                    1913 	.db 0x00
      000015 00                    1914 	.db 0x00
      000016 00                    1915 	.db 0x00
      000017 00                    1916 	.db 0x00
      000018 00                    1917 	.db 0x00
      000019 00                    1918 	.db 0x00
      00001A 00                    1919 	.db 0x00
      00001B 00                    1920 	.db 0x00
      00001C 00                    1921 	.db 0x00
      00001D 00                    1922 	.db 0x00
      00001E 00                    1923 	.db 0x00
      00001F 00                    1924 	.db 0x00
      000020 00                    1925 	.db 0x00
      000021 00                    1926 	.db 0x00
      000022 00                    1927 	.db 0x00
      000023 00                    1928 	.db 0x00
      000024 00                    1929 	.db 0x00
      000025 00                    1930 	.db 0x00
      000026 00                    1931 	.db 0x00
      000027 00                    1932 	.db 0x00
      000028 00                    1933 	.db 0x00
      000029 00                    1934 	.db 0x00
      00002A 00                    1935 	.db 0x00
      00002B 00                    1936 	.db 0x00
      00002C 00                    1937 	.db 0x00
      00002D 00                    1938 	.db 0x00
      00002E 00                    1939 	.db 0x00
      00002F 00                    1940 	.db 0x00
      000030 00                    1941 	.db 0x00
      000031 00                    1942 	.db 0x00
      000032 00                    1943 	.db 0x00
      000033 00                    1944 	.db 0x00
      000034 00                    1945 	.db 0x00
      000035 00                    1946 	.db 0x00
      000036 00                    1947 	.db 0x00
      000037 00                    1948 	.db 0x00
      000038 00                    1949 	.db 0x00
      000039 00                    1950 	.db 0x00
      00003A 00                    1951 	.db 0x00
      00003B 00                    1952 	.db 0x00
      00003C 00                    1953 	.db 0x00
      00003D 00                    1954 	.db 0x00
      00003E 00                    1955 	.db 0x00
      00003F 00                    1956 	.db 0x00
      000040 00                    1957 	.db 0x00
      000041 00                    1958 	.db 0x00
      000042 00                    1959 	.db 0x00
      000043 00                    1960 	.db 0x00
      000044 00                    1961 	.db 0x00
      000045 00                    1962 	.db 0x00
      000046 00                    1963 	.db 0x00
      000047 00                    1964 	.db 0x00
      000048 00                    1965 	.db 0x00
      000049 00                    1966 	.db 0x00
      00004A 00                    1967 	.db 0x00
      00004B 00                    1968 	.db 0x00
      00004C 00                    1969 	.db 0x00
      00004D 00                    1970 	.db 0x00
      00004E 00                    1971 	.db 0x00
      00004F 00                    1972 	.db 0x00
      000050 00                    1973 	.db 0x00
      000051 00                    1974 	.db 0x00
      000052 00                    1975 	.db 0x00
      000053 00                    1976 	.db 0x00
      000054 00                    1977 	.db 0x00
      000055 00                    1978 	.db 0x00
      000056 00                    1979 	.db 0x00
      000057 00                    1980 	.db 0x00
      000058 00                    1981 	.db 0x00
      000059 00                    1982 	.db 0x00
      00005A 00                    1983 	.db 0x00
      00005B 00                    1984 	.db 0x00
      00005C 00                    1985 	.db 0x00
      00005D 00                    1986 	.db 0x00
      00005E 00                    1987 	.db 0x00
      00005F 00                    1988 	.db 0x00
      000060 00                    1989 	.db 0x00
      000061 00                    1990 	.db 0x00
      000062 00                    1991 	.db 0x00
      000063 00                    1992 	.db 0x00
      000064 00                    1993 	.db 0x00
      000065 00                    1994 	.db 0x00
      000066 00                    1995 	.db 0x00
      000067 00                    1996 	.db 0x00
      000068 00                    1997 	.db 0x00
      000069 00                    1998 	.db 0x00
      00006A 00                    1999 	.db 0x00
      00006B 00                    2000 	.db 0x00
      00006C 00                    2001 	.db 0x00
      00006D 00                    2002 	.db 0x00
                           00006E  2003 Fmain$__xinit_player_dir$0_0$0 == .
      00006E                       2004 __xinit__player_dir:
      00006E 00                    2005 	.db #0x00	; 0
                           00006F  2006 Fmain$__xinit_joypad_current$0_0$0 == .
      00006F                       2007 __xinit__joypad_current:
      00006F 00                    2008 	.db #0x00	; 0
                           000070  2009 Fmain$__xinit_joypad_previous$0_0$0 == .
      000070                       2010 __xinit__joypad_previous:
      000070 00                    2011 	.db #0x00	; 0
                                   2012 	.area _CABS (ABS)
